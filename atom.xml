<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>answerend42的Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://answerend42.github.io/"/>
  <updated>2020-11-12T15:29:26.628Z</updated>
  <id>http://answerend42.github.io/</id>
  
  <author>
    <name>answerend42</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>P4513 小白逛公园</title>
    <link href="http://answerend42.github.io/2020/11/12/lg4513/"/>
    <id>http://answerend42.github.io/2020/11/12/lg4513/</id>
    <published>2020-11-12T15:03:13.000Z</published>
    <updated>2020-11-12T15:29:26.628Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>在小新家附近有一条“公园路”，路的一边从南到北依次排着 $n$ 个公园，小白早就看花了眼，自己也不清楚该去哪些公园玩了。  </p><p>一开始，小白就根据公园的风景给每个公园打了分-.-。小新为了省事，每次遛狗的时候都会事先规定一个范围，小白只可以选择第 $a$ 个和第 $b$ 个公园之间（包括 $a$、$b$ 两个公园）选择连续的一些公园玩。小白当然希望选出的公园的分数总和尽量高咯。同时，由于一些公园的景观会有所改变，所以，小白的打分也可能会有一些变化。  </p><p>那么，就请你来帮小白选择公园吧。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p> 第一行，两个整数 $N$ 和 $M$，分别表示表示公园的数量和操作（遛狗或者改变打分）总数。<br>    接下来 $N$ 行，每行一个整数，依次给出小白 开始时对公园的打分。<br>    接下来 $M$ 行，每行三个整数。第一个整数 $K$，$1$ 或 $2$。</p><ul><li>$K=1$ 表示，小新要带小白出去玩，接下来的两个整数 $a$ 和 $b$ 给出了选择公园的范围（$1≤a,b≤N$）。测试数据可能会出现 $a&gt;b$ 的情况，需要进行交换；</li><li>$K=2$ 表示，小白改变了对某个公园的打分，接下来的两个整数 $p$ 和 $s$，表示小白对第 $p$ 个公园的打分变成了 $s$($1\le p \le N$)。<br>  其中，$1\le N \le 5 \times 10^5$，$1 \le M \le 10^5$，所有打分都是绝对值不超过 $1000$ 的整数。  </li></ul><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p> 小白每出去玩一次，都对应输出一行，只包含一个整数，表示小白可以选出的公园得分和的最大值。</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>考虑一下不修改的做法，直接暴力跑一遍复杂度是 $\mathcal{O}(n)$ 的，不能直接去做。</p><p>维护一段区间的数据结构中，线段树无疑是一个很好的选择。</p><p>如果仍然采用暴力查询的方法，本质上复杂度并没有变优，想到朴素方法中只有与上一段相连和另起一段的情况，能否作为我们的解题思路呢？</p><p>这就涉及到了线段树上区间之间的合并（当然，单元素也是区间）</p><p>对于本题，一段中最大的子段有三种情况：</p><ol><li>最大的子段全部在本区间的右侧</li><li>最大的子段全部在本区间的左侧</li><li>最大的子段越过了本区间的中点</li></ol><p>注意到第三种情况一定是包含了本区间的一半，子区间的和是很好维护的，那么只要考虑另一半中选取开头的最大子段。（左区间从右到左的最大子段，右区间从左到右的最大子段）</p><p>本题也就被我们解决了。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e5</span> + <span class="number">5</span>, inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tree</span> &#123;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls p &lt;&lt; 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs p &lt;&lt; 1 | 1</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">        ll ml, mr, mx, sum;</span><br><span class="line">        <span class="keyword">int</span> l, r;</span><br><span class="line">    &#125; T[N &lt;&lt; <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    ll a[N];</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line">        T[p].sum = T[ls].sum + T[rs].sum, T[p].ml = max(T[ls].ml, T[ls].sum + T[rs].ml),</span><br><span class="line">        T[p].mr = max(T[rs].mr, T[rs].sum + T[ls].mr),</span><br><span class="line">        T[p].mx = max(T[ls].mx, max(T[rs].mx, T[ls].mr + T[rs].ml));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">        T[p].l = l, T[p].r = r;</span><br><span class="line">        <span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">            T[p].sum = T[p].ml = T[p].mr = T[p].mx = a[l];</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">int</span> <span class="title">mid</span><span class="params">(l + r &gt;&gt; <span class="number">1</span>)</span></span>;</span><br><span class="line">        build(ls, l, mid);</span><br><span class="line">        build(rs, mid + <span class="number">1</span>, r);</span><br><span class="line">        push_up(p);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (T[p].l == T[p].r) &#123;</span><br><span class="line">            T[p].sum = T[p].ml = T[p].mr = T[p].mx = y;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">int</span> <span class="title">mid</span><span class="params">(T[p].l + T[p].r &gt;&gt; <span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">if</span> (x &lt;= mid)</span><br><span class="line">            update(ls, x, y);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            update(rs, x, y);</span><br><span class="line">        push_up(p);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">Node <span class="title">query</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (l &lt;= T[p].l &amp;&amp; T[p].r &lt;= r)</span><br><span class="line">            <span class="keyword">return</span> T[p];</span><br><span class="line">        <span class="function"><span class="keyword">int</span> <span class="title">mid</span><span class="params">(T[p].l + T[p].r &gt;&gt; <span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">if</span> (r &lt;= mid)</span><br><span class="line">            <span class="keyword">return</span> query(ls, l, r);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (l &gt; mid)</span><br><span class="line">            <span class="keyword">return</span> query(rs, l, r);</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            Node x = query(ls, l, r), y = query(rs, l, r), re;</span><br><span class="line">            re.sum = x.sum + y.sum;</span><br><span class="line">            re.ml = max(x.sum + y.ml, x.ml);</span><br><span class="line">            re.mr = max(y.sum + x.mr, y.mr);</span><br><span class="line">            re.mx = max(x.mx, max(y.mx, x.mr + y.ml));</span><br><span class="line">            <span class="keyword">return</span> re;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">Tree T;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> op;</span><br><span class="line">ll x, y;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">cin</span> &gt;&gt; T.a[i];</span><br><span class="line">    T.build(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; op &gt;&gt; x &gt;&gt; y;</span><br><span class="line">        <span class="keyword">if</span> (op == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (x &gt; y)</span><br><span class="line">                swap(x, y);</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; T.query(<span class="number">1</span>, x, y).mx &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            T.update(<span class="number">1</span>, x, y);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ol><li><p>在本题中计算最终结果时需要用到左区间的最大子段、右区间的最大子段、左区间从右到左的最大子段、右区间从左到右的最大子段，因此要考虑直接返回一个结点</p></li><li><blockquote><p>测试数据可能会出现 $a&gt;b$ 的情况，需要进行交换</p></blockquote></li><li><p>没有区间修改可以不用加标记</p></li></ol><p>成功的解决了单点修改最大子段，来看看<a href="https://www.luogu.com.cn/problem/P4118" target="_blank" rel="noopener"><del>区间修改最大子段</del></a>吧。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;在小新家附近有一条“公园路”，路的一边从南到北依次排着 $n$ 个公园，小白早就看花了眼，自己也不清楚该去哪些公园玩了。  
      
    
    </summary>
    
    
      <category term="题解" scheme="http://answerend42.github.io/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="线段树" scheme="http://answerend42.github.io/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>P1160 队列安排</title>
    <link href="http://answerend42.github.io/2020/11/12/lg1160/"/>
    <id>http://answerend42.github.io/2020/11/12/lg1160/</id>
    <published>2020-11-12T12:40:13.000Z</published>
    <updated>2020-11-12T15:31:44.933Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>一个学校里老师要将班上 $N$ 个同学排成一列，同学被编号为 $ 1 \sim N$，他采取如下的方法：</p><ol><li>先将 $1$ 号同学安排进队列，这时队列中只有他一个人；</li><li>$2 \sim N$ 号同学依次入列，编号为 $i$ 的同学入列方式为：老师指定编号为 $i$ 的同学站在编号为 $1\sim (i -1)$ 中某位同学（即之前已经入列的同学）的左边或右边；</li><li>从队列中去掉 $M(M&lt;N)$ 个同学，其他同学位置顺序不变。</li></ol><p>在所有同学按照上述方法队列排列完毕后，老师想知道从左到右所有同学的编号。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>第 $1$ 行为一个正整数 $N$ ，表示了有 $N$ 个同学。</p><p>第 $2 \sim N$ 行，第 $i$ 行包含两个整数 $k,p$，其中 $k$ 为小于 $i$ 的正整数，$p$ 为 $0$ 或者 $1$。若 $p$ 为00，则表示将 $i$ 号同学插入到 $k$ 号同学的左边，$p$ 为 $1$ 则表示插入到右边。</p><p>第 $N+1$ 行为一个正整数 $M$，表示去掉的同学数目。</p><p>接下来 $M$ 行，每行一个正整数 $x$，表示将 $x$ 号同学从队列中移去，如果 $x$ 号同学已经不在队列中则忽略这一条指令。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>$1$ 行，包含最多 $N$ 个空格隔开的正整数，表示了队列从左到右所有同学的编号，行末换行且无空格。</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>使用双向链表模拟即可，注意不要写 <a href="https://www.luogu.com.cn/discuss/show/276680" target="_blank" rel="noopener">ub</a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">d</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, r;</span><br><span class="line">&#125; a[<span class="number">100010</span>];</span><br><span class="line"><span class="keyword">int</span> v[<span class="number">100010</span>];</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> k, p;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    a[<span class="number">1</span>].l = <span class="number">0</span>, a[<span class="number">1</span>].r = <span class="number">100009</span>, a[<span class="number">0</span>].r = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; k &gt;&gt; p;</span><br><span class="line">        <span class="keyword">if</span> (p == <span class="number">0</span>)</span><br><span class="line">            a[i].l = a[k].l, a[i].r = k, a[a[k].l].r = i, a[k].l = i;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            a[i].r = a[k].r, a[i].l = k, a[a[k].r].l = i, a[k].r = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; k;</span><br><span class="line">        <span class="keyword">if</span> (!v[k])</span><br><span class="line">            a[a[k].l].r = a[k].r, a[a[k].r].l = a[k].l, v[k] = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> bib = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        bib = a[bib].r;</span><br><span class="line">        <span class="keyword">if</span> (bib != <span class="number">100009</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; bib &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ol><li>定义链表不存在中的元素时注意数组是否会越界</li></ol><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;一个学校里老师要将班上 $N$ 个同学排成一列，同学被编号为 $ 1 \sim N$，他采取如下的方法：&lt;/p&gt;
&lt;ol&gt;

      
    
    </summary>
    
    
      <category term="题解" scheme="http://answerend42.github.io/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="模拟" scheme="http://answerend42.github.io/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="双向链表" scheme="http://answerend42.github.io/tags/%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>P1816 忠诚</title>
    <link href="http://answerend42.github.io/2020/11/12/lg1816/"/>
    <id>http://answerend42.github.io/2020/11/12/lg1816/</id>
    <published>2020-11-12T12:18:58.000Z</published>
    <updated>2020-11-12T12:38:37.949Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>老管家是一个聪明能干的人。他为财主工作了整整 $10$ 年，财主为了让自已账目更加清楚。要求管家每天记 $k$ 次账，由于管家聪明能干，因而管家总是让财主十分满意。但是由于一些人的挑拨，财主还是对管家产生了怀疑。于是他决定用一种特别的方法来判断管家的忠诚，他把每次的账目按 $1,2,3 \cdots$ 编号，然后不定时的问管家问题，问题是这样的：在 $a$ 到 $b$ 号账中最少的一笔是多少？为了让管家没时间作假他总是一次问多个问题。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入中第一行有两个数 $m,n$ 表示有 $m$($m \le 10^5$)笔账,$n$ 表示有 $n$ 个问题，$n \le 10^5$。</p><p>第二行为 $m$ 个数,分别是账目的钱数</p><p>后面 $n$ 行分别是 $n$ 个问题,每行有 $2$ 个数字说明开始结束的账目编号。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出文件中为每个问题的答案。</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>当然可以用线段树来维护，但是这里选择树状数组会更加精炼</p><p>当然，树状数组也有其弊端，对于没有被包含的单个节点，就需要一个一个比较了……<span style="color:red">这会大大降低效率！</span> </p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div class='spoiler collapsed'>    <div class='spoiler-title'>        树状数组    </div>    <div class='spoiler-content'>        <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> t[N], a[N];</span><br><span class="line"><span class="keyword">int</span> x, y;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (x &lt;= n) &#123;</span><br><span class="line">        <span class="keyword">if</span> (t[x] &gt; k)</span><br><span class="line">            t[x] = k;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        x += x &amp; -x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getmin</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> r = <span class="number">2147483647</span>;</span><br><span class="line">    <span class="keyword">while</span> (y &gt;= x) &#123;</span><br><span class="line">        <span class="keyword">if</span> (y - (y &amp; -y) &gt; x) &#123;</span><br><span class="line">            r = min(r, t[y]);</span><br><span class="line">            y -= y &amp; -y;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            r = min(r, a[y]);</span><br><span class="line">            --y;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="built_in">memset</span>(t, <span class="number">127</span>, <span class="keyword">sizeof</span>(t));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">        add(i, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; x &gt;&gt; y;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; getmin(x, y) &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>    </div></div><div class='spoiler collapsed'>    <div class='spoiler-title'>        线段树    </div>    <div class='spoiler-content'>        <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, op, x, y, k;</span><br><span class="line">ll a[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    ll min_p, sum, tag;</span><br><span class="line">&#125; T[N &lt;&lt; <span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">min</span><span class="params">(ll a, ll b)</span> </span>&#123; <span class="keyword">return</span> a &gt; b ? b : a; &#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">ls</span><span class="params">(ll p)</span> </span>&#123; <span class="keyword">return</span> p &lt;&lt; <span class="number">1</span>; &#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">rs</span><span class="params">(ll p)</span> </span>&#123; <span class="keyword">return</span> p &lt;&lt; <span class="number">1</span> | <span class="number">1</span>; &#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">push_up</span><span class="params">(ll p)</span> </span>&#123;</span><br><span class="line">    T[p].sum = T[ls(p)].sum + T[rs(p)].sum;</span><br><span class="line">    T[p].min_p = min(T[ls(p)].min_p, T[rs(p)].min_p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(ll p, ll l, ll r)</span> </span>&#123;</span><br><span class="line">    T[p].tag = <span class="number">0</span>;</span><br><span class="line">    T[p].min_p = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line">    <span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">        T[p].min_p = T[p].sum = a[l];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ll mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    build(ls(p), l, mid);</span><br><span class="line">    build(rs(p), mid + <span class="number">1</span>, r);</span><br><span class="line">    push_up(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">push_down</span><span class="params">(ll p, ll l, ll r)</span> </span>&#123;</span><br><span class="line">    ll mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    T[ls(p)].sum += T[p].tag * (r - l + <span class="number">1</span>);</span><br><span class="line">    T[ls(p)].tag += T[p].tag;</span><br><span class="line">    T[rs(p)].sum += T[p].tag * (r - l + <span class="number">1</span>);</span><br><span class="line">    T[rs(p)].tag += T[p].tag;</span><br><span class="line">    T[p].tag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">query_min</span><span class="params">(ll q_x, ll q_y, ll l, ll r, ll p)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (q_x &lt;= l &amp;&amp; r &lt;= q_y)</span><br><span class="line">        <span class="keyword">return</span> T[p].min_p;</span><br><span class="line">    ll mid = (l + r) &gt;&gt; <span class="number">1</span>, resa = <span class="number">0x3f3f3f3f</span>, resb = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line">    push_down(p, l, r);</span><br><span class="line">    <span class="keyword">if</span> (q_x &lt;= mid)</span><br><span class="line">        resa = query_min(q_x, q_y, l, mid, ls(p));</span><br><span class="line">    <span class="keyword">if</span> (q_y &gt; mid)</span><br><span class="line">        resb = query_min(q_x, q_y, mid + <span class="number">1</span>, r, rs(p));</span><br><span class="line">    <span class="keyword">return</span> min(resa, resb);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">    build(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; x &gt;&gt; y;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; query_min(x, y, <span class="number">1</span>, n, <span class="number">1</span>) &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>    </div></div><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ol><li>要初始化为最大值</li></ol><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;老管家是一个聪明能干的人。他为财主工作了整整 $10$ 年，财主为了让自已账目更加清楚。要求管家每天记 $k$ 次账，由于管
      
    
    </summary>
    
    
      <category term="题解" scheme="http://answerend42.github.io/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="线段树" scheme="http://answerend42.github.io/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
      <category term="树状数组" scheme="http://answerend42.github.io/tags/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>P3368 【模板】树状数组 2</title>
    <link href="http://answerend42.github.io/2020/11/12/lg3368/"/>
    <id>http://answerend42.github.io/2020/11/12/lg3368/</id>
    <published>2020-11-12T12:13:03.000Z</published>
    <updated>2020-11-12T12:14:00.464Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>如题，已知一个数列，你需要进行下面两种操作：</p><ol><li>将某区间每一个数数加上 $x$；</li><li>求出某一个数的值。</li></ol><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行包含两个整数 $N$、$M$($1 \le N,M \le 5 \times 10^5$)，分别表示该数列数字的个数和操作的总个数。</p><p>第二行包含 $N$ 个用空格分隔的整数，其中第 $i$ 个数字表示数列第 $i$ 项的初始值。</p><p>接下来 $M$ 行每行包含 $2$ 或 $4$ 个整数，表示一个操作，具体如下：</p><p>操作 $1$： 格式：<code>1 x y k</code> 含义：将区间 $[x,y]$ 内每个数加上 $k$；</p><p>操作 $2$： 格式：<code>2 x</code> 含义：输出第 $x$ 个数的值。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出包含若干行整数，即为所有操作 $2$ 的结果。</p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>树状数组区间修改单点查询模板题，暂无</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> t[N], x, y, k, op, n, m;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (; x &lt;= n; x += x &amp; -x) t[x] += k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ask</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">res</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (; x; x -= x &amp; -x) res += t[x];</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">cin</span> &gt;&gt; x, add(i, x - y), y = x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; op;</span><br><span class="line">        <span class="keyword">if</span> (op == <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; x &gt;&gt; y &gt;&gt; k, add(x, k), add(y + <span class="number">1</span>, -k);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; x, <span class="built_in">cout</span> &lt;&lt; ask(x) &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ol><li>差分查询插入时要注意</li></ol><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;如题，已知一个数列，你需要进行下面两种操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将某区间每一个数数加上 $x$；&lt;/li&gt;
&lt;li&gt;
      
    
    </summary>
    
    
      <category term="题解" scheme="http://answerend42.github.io/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="树状数组" scheme="http://answerend42.github.io/tags/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/"/>
    
      <category term="模板" scheme="http://answerend42.github.io/tags/%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>P3374 【模板】树状数组 1</title>
    <link href="http://answerend42.github.io/2020/11/12/lg3374/"/>
    <id>http://answerend42.github.io/2020/11/12/lg3374/</id>
    <published>2020-11-12T12:09:09.000Z</published>
    <updated>2020-11-12T12:12:39.098Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>如题，已知一个数列，你需要进行下面两种操作：</p><ul><li>将某一个数加上 $x$</li><li>求出某区间每一个数的和</li></ul><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行包含两个正整数 $n,m$($1 \le n,m \le 5 \times 10^5$)，分别表示该数列数字的个数和操作的总个数。</p><p>第二行包含 $n$ 个用空格分隔的整数，其中第 $i$ 个数字表示数列第 $i$ 项的初始值。</p><p>接下来 $m$ 行每行包含 $3$ 个整数，表示一个操作，具体如下：</p><ul><li><code>1 x k</code> 含义：将第 $x$ 个数加上 $k$</li><li><code>2 x y</code> 含义：输出区间 $[x,y]$ 内每个数的和</li></ul><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出包含若干行整数，即为所有操作 $2$ 的结果。</p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>树状数组单点修改区间查询模板题，暂无</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> t[N], op, x, y, n, m;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (; x &lt;= n; x += x &amp; -x) t[x] += k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ask</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">res</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (; x; x -= x &amp; -x) res += t[x];</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">cin</span> &gt;&gt; x, add(i, x);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; op &gt;&gt; x &gt;&gt; y;</span><br><span class="line">        <span class="keyword">if</span> (op == <span class="number">1</span>)</span><br><span class="line">            add(x, y);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; ask(y) - ask(x - <span class="number">1</span>) &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ol><li>前缀和查询是 $r$ 和 $l-1$</li></ol><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;如题，已知一个数列，你需要进行下面两种操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将某一个数加上 $x$&lt;/li&gt;
&lt;li&gt;求出某区间
      
    
    </summary>
    
    
      <category term="题解" scheme="http://answerend42.github.io/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="树状数组" scheme="http://answerend42.github.io/tags/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/"/>
    
      <category term="模板" scheme="http://answerend42.github.io/tags/%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>P1106 删数问题</title>
    <link href="http://answerend42.github.io/2020/11/12/lg1106/"/>
    <id>http://answerend42.github.io/2020/11/12/lg1106/</id>
    <published>2020-11-12T12:04:23.000Z</published>
    <updated>2020-11-12T12:05:48.283Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>键盘输入一个高精度的正整数 $N$（不超过 $250$ 位），去掉其中任意 $k$ 个数字后剩下的数字按原左右次序将组成一个新的非负整数。编程对给定的 $N$ 和 $k$，寻找一种方案使得剩下的数字组成的新数最小。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>$n$（高精度的正整数 )。</p><p>$k$（需要删除的数字个数 )。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>最后剩下的最小数。</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>首先，直接贪心删去最小的是错的，可以举出反例 $N = 1329, k = 1$ 时答案应该是 $129$ 而不是 $132$。</p><p>考虑去维护一个单调不减栈，每次入栈的时候进行判断，依次删去 $k$ 个不满足不减的元素，可以保证最后一定是最小</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; sta;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">255</span>];</span><br><span class="line"><span class="keyword">int</span> k, idx;</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">255</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s %d"</span>, s + <span class="number">1</span>, &amp;k);</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(s + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= len; i++) &#123;</span><br><span class="line">        <span class="keyword">while</span> ( k &amp;&amp; sta.size() &amp;&amp; sta.top() &gt; <span class="number">0</span> &amp;&amp; s[i] - <span class="string">'0'</span> &lt; sta.top() ) sta.pop(), k--;</span><br><span class="line">        sta.push(s[i] - <span class="string">'0'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (k-- &amp;&amp; sta.size()) sta.pop();</span><br><span class="line"><span class="keyword">while</span> (!sta.empty()) &#123;</span><br><span class="line">ans[++idx] = sta.top();sta.pop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(ans[idx] == <span class="number">0</span> &amp;&amp; idx) --idx;</span><br><span class="line"><span class="keyword">if</span>(idx == <span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">for</span>(<span class="keyword">int</span> i=idx;i&gt;=<span class="number">1</span>;i--) <span class="built_in">printf</span>(<span class="string">"%d"</span>,ans[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ol><li>注意到第 11 行 <code>k &amp;&amp; sta.size() &amp;&amp; sta.top() &gt; 0 &amp;&amp; s[i] - &#39;0&#39; &lt; sta.top()</code> 中 <code>sta.size()</code> 和 <code>sta.top()</code> 不能反过来，否则 RE</li></ol><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;键盘输入一个高精度的正整数 $N$（不超过 $250$ 位），去掉其中任意 $k$ 个数字后剩下的数字按原左右次序将组成一个
      
    
    </summary>
    
    
      <category term="题解" scheme="http://answerend42.github.io/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="贪心" scheme="http://answerend42.github.io/tags/%E8%B4%AA%E5%BF%83/"/>
    
      <category term="单调栈" scheme="http://answerend42.github.io/tags/%E5%8D%95%E8%B0%83%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>赛前冲刺日志</title>
    <link href="http://answerend42.github.io/2020/10/28/%E8%B5%9B%E5%89%8D%E5%86%B2%E5%88%BA%E6%97%A5%E5%BF%97/"/>
    <id>http://answerend42.github.io/2020/10/28/%E8%B5%9B%E5%89%8D%E5%86%B2%E5%88%BA%E6%97%A5%E5%BF%97/</id>
    <published>2020-10-28T12:45:33.000Z</published>
    <updated>2020-11-05T13:17:51.446Z</updated>
    
    <content type="html"><![CDATA[<p>离 noip2020 一个多月的一点学习记录。</p><a id="more"></a><h2 id="2020-10-28"><a href="#2020-10-28" class="headerlink" title="2020.10.28"></a>2020.10.28</h2><ul><li><p><a href="https://www.luogu.com.cn/problem/P3376" target="_blank" rel="noopener">P3376 【模板】网络最大流</a></p></li><li><p><a href="https://www.luogu.com.cn/problem/P6062" target="_blank" rel="noopener">P6062 [USACO05JAN]Muddy Fields G</a></p></li><li><p><a href="https://www.luogu.com.cn/problem/P3128" target="_blank" rel="noopener">P3128 [USACO15DEC]Max Flow P</a></p></li><li><a href="https://www.luogu.com.cn/problem/U64970" target="_blank" rel="noopener">U64970 車的放置</a></li><li><a href="https://www.luogu.com.cn/problem/P3379" target="_blank" rel="noopener">P3379 【模板】最近公共祖先（LCA）</a></li><li><a href="https://www.luogu.com.cn/problem/P3258" target="_blank" rel="noopener">P3258 [JLOI2014]松鼠的新家</a></li><li><a href="https://www.luogu.com.cn/problem/P5002" target="_blank" rel="noopener">P5002 专心OI - 找祖先</a></li><li><a href="https://www.luogu.com.cn/problem/P6869" target="_blank" rel="noopener">P6869 [COCI2019-2020#5] Putovanje</a></li></ul><p>今天的题前四道是二分图和网络流相关的，主要使用了 <a href="https://www.xht37.com/%e4%ba%8c%e5%88%86%e5%9b%be%e4%b8%8e%e7%bd%91%e7%bb%9c%e6%b5%81-%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0/" target="_blank" rel="noopener">xht37 的板子</a>，做的也还可以，难点在于二分图的建立和一些细节处理。后四道题是 LCA 和树上差分相关的题目，主要复习了倍增 LCA 的求法以及点差分转边差分，难点在于模型的转化和一些细节处理。 可见，图论的题最难的是建图，在实际使用中可以把最大流当做一个黑盒代码使用。</p><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ol><li>最大流中两个 $n$ 的含义是不一样的，一个可能是行数而不是真正的点数</li><li>二分图中如果沿用 $n$ 应当注意，$n$ 是<strong>所有点</strong>的数量并非一个集合中点的数量</li><li>二分图中如果采用 Dinic，最后求和的时候一定要记得循环从 <code>for (int i = 1; i &lt;= n; i++) hi[i] = head[i];</code> 改为 <code>for (int i = 0; i &lt; T; i++) hi[i] = head[i];</code> </li><li>倍增求 LCA 时，应该将较大的开在第一维如 <code>f[N][25]</code></li><li>倍增求 LCA 时，判断条件中 <code>if (dep[f[x][i]] &gt;= dep[y])</code> 一定不要忘记是<strong>大于等于</strong></li><li>无向图建图应当开双向边</li><li>网络流最初从 $1$ 开始建边</li></ol><h2 id="2020-10-29"><a href="#2020-10-29" class="headerlink" title="2020.10.29"></a>2020.10.29</h2><ul><li><a href="https://www.luogu.com.cn/problem/P2590" target="_blank" rel="noopener">P2590 [ZJOI2008]树的统计</a></li><li><a href="https://www.luogu.com.cn/problem/P3379" target="_blank" rel="noopener">P3379 【模板】最近公共祖先（LCA）</a></li></ul><p>今天的题目与树链剖分有关，主要参考了 <a href="https://oi-wiki.org/graph/hld/" target="_blank" rel="noopener">oi wiki</a>。为什么今天只有两道题呢？……<span style="color:white;">因为树剖太难调了</span><br>树剖的常数很小，比倍增小很多。而且很适合用来统计树上问题，当然，要注意的地方也不少。</p><h3 id="注意-1"><a href="#注意-1" class="headerlink" title="注意"></a>注意</h3><ol><li>我们需要维护每个结点的父亲、深度、子树大小、重儿子、重链的头、节点的 dfs 序、dfs 对应的节点编号等</li><li>第二遍 dfs 的时候一定要记得两个参数都是 v</li><li>线段树查询的时候一定要用 <code>ql, qr</code> 作为参数，便于调试</li><li>可以考虑精简线段树，不需要用到的可以不写</li><li>线段树空间要开到四倍</li><li>初始的时候 <code>dep[1] = 1</code></li><li>求 LCA 时，一定是 <span style="color:red;"><code>if (dep[top[u]] &gt; dep[top[v]])</code> </span> 而不是 <code>if (dep[u] &gt; dep[v])</code> &lt;/span&gt;</li></ol><div class='spoiler collapsed'>    <div class='spoiler-title'>        又臭又长的代码    </div>    <div class='spoiler-content'>        <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e5</span> + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf = <span class="number">2e9</span>;</span><br><span class="line"><span class="keyword">int</span> to[N &lt;&lt; <span class="number">1</span>], nxt[N &lt;&lt; <span class="number">1</span>], x, y;</span><br><span class="line"><span class="keyword">int</span> n, m, root, tot, head[N], dep[N], siz[N], son[N], top[N], f[N], dfn[N], rnk[N], cnt;</span><br><span class="line"><span class="keyword">char</span> op[<span class="number">15</span>];</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tree</span> &#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">ls</span><span class="params">(<span class="keyword">int</span> p)</span> </span>&#123; <span class="keyword">return</span> p &lt;&lt; <span class="number">1</span>; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">rs</span><span class="params">(<span class="keyword">int</span> p)</span> </span>&#123; <span class="keyword">return</span> p &lt;&lt; <span class="number">1</span> | <span class="number">1</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> sum[N &lt;&lt; <span class="number">2</span>], tag[N &lt;&lt; <span class="number">2</span>], maxx[N &lt;&lt; <span class="number">2</span>], a[N];</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span> p)</span> </span>&#123; sum[p] = sum[ls(p)] + sum[rs(p)], maxx[p] = max(maxx[ls(p)], maxx[rs(p)]); &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">            maxx[p] = sum[p] = a[rnk[l]];</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">int</span> <span class="title">mid</span><span class="params">(l + r &gt;&gt; <span class="number">1</span>)</span></span>;</span><br><span class="line">        build(ls(p), l, mid);</span><br><span class="line">        build(rs(p), mid + <span class="number">1</span>, r);</span><br><span class="line">        push_up(p);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">query1</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> ql, <span class="keyword">int</span> qr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (l &gt; qr || r &lt; ql)</span><br><span class="line">            <span class="keyword">return</span> -inf;</span><br><span class="line">        <span class="keyword">if</span> (ql &lt;= l &amp;&amp; r &lt;= qr)</span><br><span class="line">            <span class="keyword">return</span> maxx[p];</span><br><span class="line">        <span class="function"><span class="keyword">int</span> <span class="title">mid</span><span class="params">(l + r &gt;&gt; <span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">return</span> max(query1(ls(p), l, mid, ql, qr), query1(rs(p), mid + <span class="number">1</span>, r, ql, qr));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">query2</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> ql, <span class="keyword">int</span> qr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (l &gt; qr || r &lt; ql)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (ql &lt;= l &amp;&amp; r &lt;= qr)</span><br><span class="line">            <span class="keyword">return</span> sum[p];</span><br><span class="line">        <span class="function"><span class="keyword">int</span> <span class="title">mid</span><span class="params">(l + r &gt;&gt; <span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">return</span> query2(ls(p), l, mid, ql, qr) + query2(rs(p), mid + <span class="number">1</span>, r, ql, qr);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> x, <span class="keyword">int</span> t)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">            maxx[p] = sum[p] = t;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">int</span> <span class="title">mid</span><span class="params">(l + r &gt;&gt; <span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">if</span> (x &lt;= mid)</span><br><span class="line">            update(ls(p), l, mid, x, t);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            update(rs(p), mid + <span class="number">1</span>, r, x, t);</span><br><span class="line">        push_up(p);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; T;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line">    to[++tot] = v;</span><br><span class="line">    nxt[tot] = head[u];</span><br><span class="line">    head[u] = tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line">    son[u] = <span class="number">-1</span>, siz[u] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = head[u]; i; i = nxt[i]) &#123;</span><br><span class="line">        <span class="keyword">int</span> v = to[i];</span><br><span class="line">        <span class="keyword">if</span> (!dep[v]) &#123;</span><br><span class="line">            dep[v] = dep[u] + <span class="number">1</span>;</span><br><span class="line">            f[v] = u;</span><br><span class="line">            dfs1(v);</span><br><span class="line">            siz[u] += siz[v];</span><br><span class="line">            <span class="keyword">if</span> (son[v] == <span class="number">-1</span> || siz[v] &gt; siz[son[u]])</span><br><span class="line">                son[u] = v;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> tv)</span> </span>&#123;</span><br><span class="line">    top[x] = tv;</span><br><span class="line">    dfn[x] = ++cnt;</span><br><span class="line">    rnk[cnt] = x;</span><br><span class="line">    <span class="keyword">if</span> (son[x] == <span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    dfs2(son[x], tv);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = head[x]; i; i = nxt[i]) &#123;</span><br><span class="line">        <span class="keyword">int</span> v = to[i];</span><br><span class="line">        <span class="keyword">if</span> (v != f[x] &amp;&amp; v != son[x])</span><br><span class="line">            dfs2(v, v);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">querymax</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret = -inf, fx = top[x], fy = top[y];</span><br><span class="line">    <span class="keyword">while</span> (fx != fy) &#123;</span><br><span class="line">        <span class="keyword">if</span> (dep[fx] &gt;= dep[fy])</span><br><span class="line">            ret = max(ret, T.query1(<span class="number">1</span>, <span class="number">1</span>, n, dfn[fx], dfn[x])), x = f[fx];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            ret = max(ret, T.query1(<span class="number">1</span>, <span class="number">1</span>, n, dfn[fy], dfn[y])), y = f[fy];</span><br><span class="line">        fx = top[x];</span><br><span class="line">        fy = top[y];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (dfn[x] &lt; dfn[y])</span><br><span class="line">        ret = max(ret, T.query1(<span class="number">1</span>, <span class="number">1</span>, n, dfn[x], dfn[y]));</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        ret = max(ret, T.query1(<span class="number">1</span>, <span class="number">1</span>, n, dfn[y], dfn[x]));</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">querysum</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>, fx = top[x], fy = top[y];</span><br><span class="line">    <span class="keyword">while</span> (fx != fy) &#123;</span><br><span class="line">        <span class="keyword">if</span> (dep[fx] &gt;= dep[fy])</span><br><span class="line">            ret += T.query2(<span class="number">1</span>, <span class="number">1</span>, n, dfn[fx], dfn[x]), x = f[fx];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            ret += T.query2(<span class="number">1</span>, <span class="number">1</span>, n, dfn[fy], dfn[y]), y = f[fy];</span><br><span class="line">        fx = top[x];</span><br><span class="line">        fy = top[y];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (dfn[x] &lt; dfn[y])</span><br><span class="line">        ret += T.query2(<span class="number">1</span>, <span class="number">1</span>, n, dfn[x], dfn[y]);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        ret += T.query2(<span class="number">1</span>, <span class="number">1</span>, n, dfn[y], dfn[x]);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;x, &amp;y);</span><br><span class="line">        add(x, y);</span><br><span class="line">        add(y, x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T.a[i]);</span><br><span class="line">    dep[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    dfs1(<span class="number">1</span>);</span><br><span class="line">    dfs2(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    T.build(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s%d%d"</span>, op, &amp;x, &amp;y);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">strcmp</span>(op, <span class="string">"CHANGE"</span>))</span><br><span class="line">            T.update(<span class="number">1</span>, <span class="number">1</span>, n, dfn[x], y);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">strcmp</span>(op, <span class="string">"QMAX"</span>))</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, querymax(x, y));</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">strcmp</span>(op, <span class="string">"QSUM"</span>))</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, querysum(x, y));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>    </div></div><h2 id="2020-10-30"><a href="#2020-10-30" class="headerlink" title="2020.10.30"></a>2020.10.30</h2><ul><li><a href="https://www.luogu.com.cn/problem/P2680" target="_blank" rel="noopener">P2680 运输计划</a></li></ul><p>一道题还没做完（</p><p>这个题本来自信能 20pts，结果 15 pts，调了一会找不到错误，于是看了看数据发现<span style="color:red;"><strong>查询的起点和终点是一个点</strong></span>……</p><p>在网上找不到想要的暴力做法，明天可能会自己写一个 60pts 的</p><div class='spoiler collapsed'>    <div class='spoiler-title'>        code_20pts    </div>    <div class='spoiler-content'>        <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span> + <span class="number">5</span>, M = N * <span class="number">2</span>, inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> tot, to[M], cost[M], nxt[M], head[N], dep[N], f[N][<span class="number">25</span>], d[N], rnk[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span> </span>&#123;</span><br><span class="line">    to[++tot] = v;</span><br><span class="line">    nxt[tot] = head[u];</span><br><span class="line">    cost[tot] = w;</span><br><span class="line">    head[u] = tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> u, v, w;</span><br><span class="line"><span class="built_in">vector</span>&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; &gt; q;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> fa)</span> </span>&#123;</span><br><span class="line">    dep[u] = dep[fa] + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; (<span class="number">1</span> &lt;&lt; i) &lt;= dep[u]; i++) f[u][i] = f[f[u][i - <span class="number">1</span>]][i - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = head[u]; i; i = nxt[i]) &#123;</span><br><span class="line">        <span class="keyword">int</span> v = to[i];</span><br><span class="line">        <span class="keyword">if</span> (v == fa)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        dfs(v, u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lca</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (dep[x] &lt; dep[y])</span><br><span class="line">        swap(x, y);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">24</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">if</span> (dep[f[x][i]] &gt;= dep[y])</span><br><span class="line">            x = f[x][i];</span><br><span class="line">        <span class="keyword">if</span> (x == y)</span><br><span class="line">            <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">24</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        <span class="keyword">if</span> (f[x][i] != f[y][i])</span><br><span class="line">            x = f[x][i], y = f[y][i];</span><br><span class="line">    <span class="keyword">return</span> f[x][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> fa)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = head[u]; i; i = nxt[i]) &#123;</span><br><span class="line">        <span class="keyword">int</span> v = to[i];</span><br><span class="line">        <span class="keyword">if</span> (v == fa)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        calc(v, u);</span><br><span class="line">        d[u] += d[v];</span><br><span class="line">        rnk[v] = i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;u, &amp;v, &amp;w);</span><br><span class="line">        add(u, v, w);</span><br><span class="line">        add(v, u, w);</span><br><span class="line">    &#125;</span><br><span class="line">    q.reserve(<span class="number">3005</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;u, &amp;v);</span><br><span class="line">        q.push_back(make_pair(u, v));</span><br><span class="line">    &#125;</span><br><span class="line">    assert(!q.empty());</span><br><span class="line">    dfs(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> x = q[<span class="number">0</span>].first, y = q[<span class="number">0</span>].second;</span><br><span class="line">        <span class="keyword">if</span>(x == y) <span class="keyword">return</span> <span class="built_in">printf</span>(<span class="string">"0"</span>),<span class="number">0</span>; <span class="comment">// 这个点是真的毒瘤</span></span><br><span class="line">        d[x]++, d[y]++, d[lca(x, y)] -= <span class="number">2</span>;</span><br><span class="line">        calc(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">int</span> maxx = -inf, ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (d[i] == <span class="number">1</span>) &#123;</span><br><span class="line">                maxx = max(maxx, cost[rnk[i]]);</span><br><span class="line">                ans += cost[rnk[i]];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, ans - maxx);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>    </div></div><h3 id="注意-2"><a href="#注意-2" class="headerlink" title="注意"></a>注意</h3><ol><li>查询起点和终点的是同一个点要记得特判</li><li><code>calc</code> 中是 <code>rnk[v] = i;</code> 不是 <code>rnk[u] = i;</code></li></ol><p>打了 <a href="https://codeforces.ml/contest/1422" target="_blank" rel="noopener">Codeforces Round #675 (Div. 2)</a> ：</p><ol><li><a href="https://codeforces.ml/contest/1422/problem/A" target="_blank" rel="noopener">Fence</a></li><li><a href="https://codeforces.ml/contest/1422/problem/B" target="_blank" rel="noopener">Nice Matrix</a></li><li><a href="https://codeforces.ml/contest/1422/problem/C" target="_blank" rel="noopener">Bargain</a></li><li><a href="https://codeforces.ml/contest/1422/problem/D" target="_blank" rel="noopener">Returning Home</a></li><li><a href="https://codeforces.ml/contest/1422/problem/E" target="_blank" rel="noopener">Minlexes</a></li></ol><h2 id="2020-10-31"><a href="#2020-10-31" class="headerlink" title="2020.10.31"></a>2020.10.31</h2><ul><li><a href="https://www.luogu.com.cn/problem/P3150" target="_blank" rel="noopener">P3150 pb的游戏（1）</a></li><li><a href="https://www.luogu.com.cn/problem/P1305" target="_blank" rel="noopener">P1305 新二叉树</a></li><li><a href="https://www.luogu.com.cn/problem/P4710" target="_blank" rel="noopener">P4710 「物理」平抛运动</a></li><li><a href="https://www.luogu.com.cn/problem/P3373" target="_blank" rel="noopener">P3373 【模板】线段树 2</a></li><li><a href="https://www.luogu.com.cn/problem/P3865" target="_blank" rel="noopener">P3865 【模板】ST表</a></li><li><a href="https://www.luogu.com.cn/problem/P3808" target="_blank" rel="noopener">P3808 【模板】AC自动机（简单版）</a></li><li><a href="https://www.luogu.com.cn/problem/P3384" target="_blank" rel="noopener">P3384 【模板】轻重链剖分</a></li></ul><p>可以看到，除了三道题是来自原来的任务列表以外，做了四道模板题，按照熟练程度由大到小排序。</p><h3 id="注意-3"><a href="#注意-3" class="headerlink" title="注意"></a>注意</h3><h4 id="线段树"><a href="#线段树" class="headerlink" title="线段树"></a>线段树</h4><ol><li><strong>空间要开四倍</strong></li><li>下推标记时先加法后乘法</li></ol><h4 id="ST表"><a href="#ST表" class="headerlink" title="ST表"></a>ST表</h4><ol><li>考虑线性求 log <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Logn[<span class="number">1</span>] = <span class="number">0</span>,Logn[<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">3</span>; i &lt; maxn; i++) &#123;</span><br><span class="line">        Logn[i] = Logn[i / <span class="number">2</span>] + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="AC自动机"><a href="#AC自动机" class="headerlink" title="AC自动机"></a>AC自动机</h4><ol><li>应当考虑写个函数 <code>rnk</code> 用来求 <code>str[i] - &#39;a&#39;</code>  ，避免 <code>i</code> 和 <code>idx</code> 两个变量混用</li></ol><h2 id="2020-11-1"><a href="#2020-11-1" class="headerlink" title="2020.11.1"></a>2020.11.1</h2><ul><li><a href="https://www.luogu.com.cn/problem/P1311" target="_blank" rel="noopener">P1311 选择客栈</a></li><li><a href="https://codeforces.ml/contest/1445" target="_blank" rel="noopener">Codeforces Round #680 (Div. 2, based on Moscow Team Olympiad)</a><ul><li><a href="https://codeforces.ml/contest/1445/problem/A" target="_blank" rel="noopener">Array Rearrangment</a></li><li><a href="https://codeforces.ml/contest/1445/problem/B" target="_blank" rel="noopener">Elimination</a></li><li><a href="https://codeforces.ml/contest/1445/problem/C" target="_blank" rel="noopener">Division</a></li><li><a href="https://codeforces.ml/contest/1445/problem/D" target="_blank" rel="noopener">Divide and Sum</a></li></ul></li></ul><h2 id="2020-11-2-11-4"><a href="#2020-11-2-11-4" class="headerlink" title="2020.11.2~11.4"></a>2020.11.2~11.4</h2><p>sb文化课+月考（</p><h2 id="2020-11-5"><a href="#2020-11-5" class="headerlink" title="2020.11.5"></a>2020.11.5</h2><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;离 noip2020 一个多月的一点学习记录。&lt;/p&gt;
    
    </summary>
    
    
      <category term="记录" scheme="http://answerend42.github.io/categories/%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="图论" scheme="http://answerend42.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="最近公共祖先" scheme="http://answerend42.github.io/tags/%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/"/>
    
      <category term="网络流" scheme="http://answerend42.github.io/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
      <category term="倍增" scheme="http://answerend42.github.io/tags/%E5%80%8D%E5%A2%9E/"/>
    
      <category term="二分图" scheme="http://answerend42.github.io/tags/%E4%BA%8C%E5%88%86%E5%9B%BE/"/>
    
      <category term="重链剖分" scheme="http://answerend42.github.io/tags/%E9%87%8D%E9%93%BE%E5%89%96%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>Codeforces Round 677 (Div. 3)</title>
    <link href="http://answerend42.github.io/2020/10/21/cf1433/"/>
    <id>http://answerend42.github.io/2020/10/21/cf1433/</id>
    <published>2020-10-21T09:19:36.000Z</published>
    <updated>2020-10-28T15:33:56.195Z</updated>
    
    <content type="html"><![CDATA[<h2 id="A-Boring-Apartments"><a href="#A-Boring-Apartments" class="headerlink" title="A.Boring Apartments"></a><a href="https://codeforces.com/contest/1433/problem/A" target="_blank" rel="noopener">A.Boring Apartments</a></h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>有一座建筑物由 $10000$ 套公寓组成，编号从 $1$ 到 $10000$，包括 $1,10000$。</p><p>如果一个公寓的号码是由<em>相同的数字</em>组成的，则称它<strong>无聊</strong>。无聊公寓的例子有 $11,2,777,9999$ 等等。</p><p>我们的主角是个捣蛋鬼，他给所有无聊公寓的对讲机打电话，直到有人接电话，顺序如下:</p><ul><li>首先，他以递增的次序呼叫所有由数字 $1$ 组成的公寓($1,11,111,1111$)</li><li>接下来，他以递增的次序呼叫所有由数字 $2$ 组成的公寓($2,22,222,2222$)</li><li>诸如此类。</li></ul><p>无聊公寓的住户 $x$ 接听了电话，我们的角色不再给任何人打电话。</p><p>我们的主角想知道他总共按了多少个数字，而你的任务就是帮助他计算按键的总数。</p><p>例如，如果无聊公寓 $22$ 的居民回答，那么我们的字符称为公寓 $1,11,111,111,2,22$，他按下的总数字是 $1 + 2 + 3 + 4 + 1 + 2 = 13$。</p><a id="more"></a><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入的第一行包含一个整数 $t$ ($1\leq t \leq3 6$)为测试用例数。</p><p>每组数据中唯一的一行输入包含一个整数 $x$($1\leq x \leq 9999$)，表示接电话的居民的公寓号。保证 $x$ 由相同的数字组成。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>对于每个测试用例，打印出答案: 我们的主角总共按了多少个数字。</p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>考虑到打到 $x$ 时，前面的所有数字的所有号码都被打了一遍即 $(c-1) \times 10$,其中 $c = x \bmod 10$。</p><p>当前这个数字被打了 $\dfrac {(cnt+1) \times cnt}{2}$，其中 $cnt$ 为 $x$ 的位数 。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> _, n;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>, m = n;</span><br><span class="line">    <span class="keyword">while</span> (m) &#123;</span><br><span class="line">        m /= <span class="number">10</span>;</span><br><span class="line">        cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> c = n % <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> ans = (cnt + <span class="number">1</span>) * cnt / <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, (c - <span class="number">1</span>) * <span class="number">10</span> + ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;_); _; _--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        solve(n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B-Yet-Another-Bookshelf"><a href="#B-Yet-Another-Bookshelf" class="headerlink" title="B.Yet Another Bookshelf"></a><a href="https://codeforces.com/contest/1433/problem/B" target="_blank" rel="noopener">B.Yet Another Bookshelf</a></h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>有一个可以放下 $n$ 本书的书架。如果第 $i$ 个位置上有一本书，则 $a_i=1$，否则 $a_i=0$。保证书架上至少有一本书。</p><p>在一步中，你可以移动一些连续的段 $[l,r]$ 组成的图书(也就是说，对于每个 $i$ 从 $ l$ 到 $r$，满足 $a_i=1$)：</p><ul><li>把它移到右边 $1$ 个：把所有的 $i(l\leq i\leq r)$ 号书移到 $i+1$  。前提是当 $r+1 \leq n$ 而且 $r+1$ 上没有书</li><li>把它移到左边 $1$ 个：把所有的 $i(l \leq i \leq r)$ 号书移到 $i-1$  。前提是当 $l-1 \leq n$ 而且 $r+1$ 上没有书</li></ul><p>你的任务是找到一段连续的(即没有任何间隙的段)来收集书架上所有书籍所需的最小移动次数。</p><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入的第一行包含一个整数 $t$($1≤ t ≤200$)为测试用例数。</p><p>测试用例的第一行包含一个整数 $n$($1≤ n ≤50$)书架上的位置数。测试用例的第二行包含 $n$ 个整数 $a_1,a_2,\ldots,a_n$($0 \le a_i \le 1$) ，其中如果在这个位置有一本书，则 $a_i$ 为 $1$，否则为 $0$。保证书架上<strong>至少有一本书</strong>。</p><h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>对于每个测试用例，输出一个整数：用连续段(即没有间隙的段)收集书架上所有书所需的最小移动次数。</p><h3 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h3><p>如果有两个段作为不连续的段，它们之间的空隙我们总可以一步完成。</p><p>那么对于每一个记录的段，求出它与下一个段的长度，最后将这些 “空隙”长度加起来就是我们的答案。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> _, n, a[<span class="number">55</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> last = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] == <span class="number">1</span> &amp;&amp; !last) &#123;</span><br><span class="line">            last = i;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a[i] == <span class="number">1</span>) &#123;</span><br><span class="line">            ans += i - last - <span class="number">1</span>;</span><br><span class="line">            last = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;_); _; _--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">        solve(n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-Dominant-Piranha"><a href="#C-Dominant-Piranha" class="headerlink" title="C.Dominant Piranha"></a><a href="https://codeforces.com/contest/1433/problem/C" target="_blank" rel="noopener">C.Dominant Piranha</a></h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p>水族馆里有 $n$ 条大小分别为 $a_1, a_2, \ldots, a_n$ 的食人鱼，按照生活在水族馆的顺序从左到右编号。</p><p>伯兰州立大学的科学家们想要找出水族馆里是否有占优势的食人鱼。如果食人鱼能吃掉水族馆里所有的其他食人鱼(当然，除了它自己) ，它就被称为优势食人鱼。其他的食人鱼什么也不会做，而占优势的食人鱼会吃掉它们。</p><p>由于水族馆相当狭长，食人鱼在一次移动中只能吃掉邻近的一条食人鱼。食人鱼可以根据自己的需要(或尽可能)做任何动作。更确切地说:</p><ul><li>食人鱼 $i$ 可以吃食人鱼 $i-1$ 当且仅当 $a_{i-1}&lt;a_i$ </li><li>食人鱼 $i$ 可以吃食人鱼 $i+1$ 当且仅当 $a_{i+1}&lt;a_i$ </li></ul><p>在 $i$ 号食人鱼吃掉一条鱼后，它的体积会增大一 ($a_i \to a_i+1$)</p><p>你要找到占优势的任意一条食人鱼，如果没有，输出 $-1$</p><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入的第一行包含一个整数 $t$($1 \le t \le 2 \cdot 10^4$)为测试用例数。</p><p>测试用例的第一行包含一个整数 $n$($2 \le n \le 3 \cdot 10^5$)水族馆里食人鱼的数量。测试用例的第二行包含 $n$ 个整数 $a_1,a_2,\ldots,a_n$($1 \le a_i \le 10^9$) 。</p><h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h3><p>对于每个测试用例：如果没有一条占优势的鱼输出 $-1$，否则输出任意一条优势鱼的编号</p><h3 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h3><p>无解的情况很好判断，也就是全部相等。对于其他的情况，总是能确定一个唯一最大值（也可能是吃掉鱼后的唯一最大）。我的这个做法的正确性不能保证，是通过找到最大和次大两个进行判断的，不确定有没有数据能够卡掉 = =</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">3e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> _, n, a[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> last = <span class="number">0</span>, ans = <span class="number">0</span>, flag = <span class="number">1</span>, maxx = a[<span class="number">1</span>], idx = <span class="number">1</span>, max2, idx2;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] != a[<span class="number">1</span>]) &#123;</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (maxx &lt; a[i]) &#123;</span><br><span class="line">                max2 = maxx, idx2 = idx;</span><br><span class="line">                maxx = a[i], idx = i;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (maxx &gt; a[i]) &#123;</span><br><span class="line">                <span class="keyword">if</span> (a[i - <span class="number">1</span>] == maxx) &#123;</span><br><span class="line">                    max2 = maxx, idx2 = idx;</span><br><span class="line">                    maxx = a[i - <span class="number">1</span>], idx = i - <span class="number">1</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a[i + <span class="number">1</span>] == maxx) &#123;</span><br><span class="line">                    max2 = maxx, idx2 = idx;</span><br><span class="line">                    maxx = a[i + <span class="number">1</span>], idx = i + <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (idx - <span class="number">1</span> &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[idx - <span class="number">1</span>] &lt; maxx) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, idx);</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (idx + <span class="number">1</span> &lt;= n &amp;&amp; !flag) &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[idx + <span class="number">1</span>] &lt; maxx) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, idx);</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (idx2 + <span class="number">1</span> &lt;= n &amp;&amp; !flag) &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[idx2 + <span class="number">1</span>] &lt; max2) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, idx2);</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (idx2 - <span class="number">1</span> &gt;= <span class="number">1</span> &amp;&amp; !flag) &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[idx2 - <span class="number">1</span>] &lt; max2) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, idx2);</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;_); _; _--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">        solve(n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ol><li>不应该写成 <code>a[idx-1]&lt;maxx&amp;&amp;a[idx-1]&gt;=1</code> 可能访问负数下标</li></ol><h2 id="D-Districts-Connection"><a href="#D-Districts-Connection" class="headerlink" title="D. Districts Connection"></a><a href="https://codeforces.com/contest/1433/problem/D" target="_blank" rel="noopener">D. Districts Connection</a></h2><h3 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h3><p>城市有 $n$ 个区域，第 $i$ 个区域属于 $a_i$ 号帮派，最初没有区域互相连接。</p><p>你的任务是建立 $n-1$ 条双向边使得区域间相互连通，任意一条边的两端不属于同一个帮派。</p><h3 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入的第一行包含一个整数 $t$($1 \le t \le 500$)为测试用例数。</p><p>测试用例的第一行包含一个整数 $n$($2 \le n \le 5000$)区域的数量。测试用例的第二行包含 $n$ 个整数 $a_1,a_2,\ldots,a_n$($1 \le a_i \le 10^9$)表示 $i$ 号区域的归属 。</p><h3 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h3><p>对于每一个测试用例：</p><ul><li><p>如果不能连接输出一行字符串 <code>NO</code></p></li><li><p>如果可以连接输出一行字符串 <code>YES</code>，接下来 $n-1$ 行分别输出 $n-1$ 条边，用点对 $x_i$ 和 $y_i$($1 \le x_i, y_i \le n; x_i \ne y_i$)表示。 </p></li></ul><h3 id="题解-3"><a href="#题解-3" class="headerlink" title="题解"></a>题解</h3><p>无解的情况很好判断，也就是全部相等。考虑至少有两个帮派的情况，将所有非 $a_1$ 的帮派控制的区域与 $a_1$ 相连，找到最后一个与 $a_1$ 相连的区域，将所有 $a_1$ 帮派控制的区域与其相连。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    Node() &#123;&#125;</span><br><span class="line">    Node(<span class="keyword">int</span> _x, <span class="keyword">int</span> _y) &#123; x = _x, y = _y; &#125;</span><br><span class="line">&#125; p[<span class="number">5005</span>];</span><br><span class="line"><span class="keyword">int</span> _, n, a[<span class="number">5005</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>, flag = <span class="number">1</span>, idx, idx2;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] != a[<span class="number">1</span>]) &#123;</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag)</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[i] != a[<span class="number">1</span>])</span><br><span class="line">                p[++cnt] = &#123; <span class="number">1</span>, i &#125;, idx = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[i] == a[<span class="number">1</span>])</span><br><span class="line">                p[++cnt] = &#123; idx, i &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= cnt; i++) <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, p[i].x, p[i].y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;_); _; _--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">        solve(n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注意-1"><a href="#注意-1" class="headerlink" title="注意"></a>注意</h3><ol><li>构造函数必须先考虑无参构造，否则会报错</li></ol><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;A-Boring-Apartments&quot;&gt;&lt;a href=&quot;#A-Boring-Apartments&quot; class=&quot;headerlink&quot; title=&quot;A.Boring Apartments&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://codeforces.com/contest/1433/problem/A&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;A.Boring Apartments&lt;/a&gt;&lt;/h2&gt;&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;有一座建筑物由 $10000$ 套公寓组成，编号从 $1$ 到 $10000$，包括 $1,10000$。&lt;/p&gt;
&lt;p&gt;如果一个公寓的号码是由&lt;em&gt;相同的数字&lt;/em&gt;组成的，则称它&lt;strong&gt;无聊&lt;/strong&gt;。无聊公寓的例子有 $11,2,777,9999$ 等等。&lt;/p&gt;
&lt;p&gt;我们的主角是个捣蛋鬼，他给所有无聊公寓的对讲机打电话，直到有人接电话，顺序如下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先，他以递增的次序呼叫所有由数字 $1$ 组成的公寓($1,11,111,1111$)&lt;/li&gt;
&lt;li&gt;接下来，他以递增的次序呼叫所有由数字 $2$ 组成的公寓($2,22,222,2222$)&lt;/li&gt;
&lt;li&gt;诸如此类。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;无聊公寓的住户 $x$ 接听了电话，我们的角色不再给任何人打电话。&lt;/p&gt;
&lt;p&gt;我们的主角想知道他总共按了多少个数字，而你的任务就是帮助他计算按键的总数。&lt;/p&gt;
&lt;p&gt;例如，如果无聊公寓 $22$ 的居民回答，那么我们的字符称为公寓 $1,11,111,111,2,22$，他按下的总数字是 $1 + 2 + 3 + 4 + 1 + 2 = 13$。&lt;/p&gt;
    
    </summary>
    
    
      <category term="比赛" scheme="http://answerend42.github.io/categories/%E6%AF%94%E8%B5%9B/"/>
    
    
      <category term="模拟" scheme="http://answerend42.github.io/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="构造" scheme="http://answerend42.github.io/tags/%E6%9E%84%E9%80%A0/"/>
    
      <category term="贪心" scheme="http://answerend42.github.io/tags/%E8%B4%AA%E5%BF%83/"/>
    
      <category term="数学" scheme="http://answerend42.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>P4170 [CQOI2007]涂色</title>
    <link href="http://answerend42.github.io/2020/10/21/lg4170/"/>
    <id>http://answerend42.github.io/2020/10/21/lg4170/</id>
    <published>2020-10-20T16:10:56.000Z</published>
    <updated>2020-10-28T15:34:18.157Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4170" target="_blank" rel="noopener">题目链接</a></p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>假设你有一条长度为 $5$ 的木版，初始时没有涂过任何颜色。你希望把它的 $5$ 个单位长度分别涂上红、绿、蓝、绿、红色，用一个长度为 $5$ 的字符串表示这个目标：<code>RGBGR</code>。</p><p>每次你可以把一段连续的木版涂成一个给定的颜色，后涂的颜色覆盖先涂的颜色。例如第一次把木版涂成 <code>RRRRR</code>，第二次涂成 <code>RGGGR</code>，第三次涂成 <code>RGBGR</code>，达到目标。</p><p>用尽量少的涂色次数达到目标。</p><a id="more"></a><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入仅一行，包含一个长度为 $n$ 的字符串，即涂色目标。字符串中的每个字符都是一个大写字母，不同的字母代表不同颜色，相同的字母代表相同颜色。($1≤n≤50$)</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>仅一行，包含一个数，即最少的涂色次数。</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>初始为空，要达到最终状态，我们总是需要选择<strong>一段</strong>涂上颜色。可以很快想到用区间 $\text{DP}$。</p><p>考虑这么一个问题，若给定状态中只用涂上一个字符，我们一定只用涂一次。这也就是边界条件 $f_{i,i}=1$。</p><p>而对于颜色相同而非同一个字符的情况，多涂一个总是无伤大雅的，也就是 $f<em>{i,j}=\min(f</em>{i+1,j},f_{i,j-1})$。</p><p>总后也就是我们常用的区间 $\text{DP}$，枚举一个分割点进行 $\text{DP}$。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">105</span>];</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">105</span>][<span class="number">105</span>];</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">f[l][r]  = min&#123; f[l + 1][r], f[l][r - 1] &#125;(a[l] = a[r]),</span></span><br><span class="line"><span class="comment">min&#123; f[l][k] + f[k + 1][r], f[l][r] &#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, a + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> length = <span class="built_in">strlen</span>(a + <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">memset</span>(f, <span class="number">0x3f</span>, <span class="keyword">sizeof</span>(f));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= length; i++) f[i][i] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> len = <span class="number">1</span>; len &lt; length; len++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">1</span>; l + len &lt;= length; l++) &#123;</span><br><span class="line">            <span class="keyword">int</span> r = l + len;</span><br><span class="line">            <span class="keyword">if</span> (a[l] == a[r])</span><br><span class="line">                f[l][r] = min(f[l + <span class="number">1</span>][r], f[l][r - <span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k = l; k &lt; r; k++) f[l][r] = min(f[l][k] + f[k + <span class="number">1</span>][r], f[l][r]);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, f[<span class="number">1</span>][length]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P4170&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;假设你有一条长度为 $5$ 的木版，初始时没有涂过任何颜色。你希望把它的 $5$ 个单位长度分别涂上红、绿、蓝、绿、红色，用一个长度为 $5$ 的字符串表示这个目标：&lt;code&gt;RGBGR&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;每次你可以把一段连续的木版涂成一个给定的颜色，后涂的颜色覆盖先涂的颜色。例如第一次把木版涂成 &lt;code&gt;RRRRR&lt;/code&gt;，第二次涂成 &lt;code&gt;RGGGR&lt;/code&gt;，第三次涂成 &lt;code&gt;RGBGR&lt;/code&gt;，达到目标。&lt;/p&gt;
&lt;p&gt;用尽量少的涂色次数达到目标。&lt;/p&gt;
    
    </summary>
    
    
      <category term="题解" scheme="http://answerend42.github.io/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="动态规划" scheme="http://answerend42.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="区间DP" scheme="http://answerend42.github.io/tags/%E5%8C%BA%E9%97%B4DP/"/>
    
  </entry>
  
  <entry>
    <title>P6832 [Cnoi2020]子弦</title>
    <link href="http://answerend42.github.io/2020/10/20/lg6382/"/>
    <id>http://answerend42.github.io/2020/10/20/lg6382/</id>
    <published>2020-10-20T15:50:38.000Z</published>
    <updated>2020-10-28T15:34:28.037Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P6832" target="_blank" rel="noopener">题目链接</a></p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>Cirno 有一个字符串 $\texttt{S}$，并希望你能求出 $\texttt{S}$ 出现次数最多的非空子串的出现次数，记作 $p$。</p><a id="more"></a><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>一行，一个字符串 $\texttt{S}$。($0 &lt; | \texttt{S} | \le 10^7$,$\texttt{S}_x\in [ \texttt{a} , \texttt{z} ]$)</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>一行，一个整数 $p$。</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>对于长度为一符串，有且仅有一个子串为最大。对于长度大于一的字符串的子串，总包含了单个字母为子串，也就保证了单个字母作为子串总是最大的，因此，只用统计单个字母出现的最大次数。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e7</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> ans, a[<span class="number">30</span>];</span><br><span class="line"><span class="keyword">char</span> s[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">        a[s[i] - <span class="string">'a'</span>]++;</span><br><span class="line">        ans = max(ans, a[s[i] - <span class="string">'a'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P6832&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;Cirno 有一个字符串 $\texttt{S}$，并希望你能求出 $\texttt{S}$ 出现次数最多的非空子串的出现次数，记作 $p$。&lt;/p&gt;
    
    </summary>
    
    
      <category term="题解" scheme="http://answerend42.github.io/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="字符串" scheme="http://answerend42.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="贪心" scheme="http://answerend42.github.io/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>初赛复习集合</title>
    <link href="http://answerend42.github.io/2020/10/07/%E5%88%9D%E8%B5%9B%E5%A4%8D%E4%B9%A0%E9%9B%86%E5%90%88/"/>
    <id>http://answerend42.github.io/2020/10/07/%E5%88%9D%E8%B5%9B%E5%A4%8D%E4%B9%A0%E9%9B%86%E5%90%88/</id>
    <published>2020-10-07T14:07:39.000Z</published>
    <updated>2020-10-28T15:33:32.745Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>初赛过了</p></blockquote><a id="more"></a><h2 id="CSP-S-2019"><a href="#CSP-S-2019" class="headerlink" title="CSP/S-2019"></a>CSP/S-2019</h2><p><img src="https://i.loli.net/2020/10/07/XGtg8WTaAPBIY62.png" alt="image-20201007220800359"></p><p>​    Dijkstra 需要选取最近的 <code>d[s]</code>，Floyd 不需要任何贪心，Prim 同 Dijkstra，Kruskal 需要选取最短的边</p><p><img src="https://i.loli.net/2020/10/07/ulo9sYA4c3MTkhF.png" alt="image-20201007224328405"></p><p>第 4 题中，如果给定 $a=b$，那么 <code>cnt[i]</code> 会变成原先的两倍可能会超出 $n$<br>第 6 题中，要知道并查集不带路径压缩的最坏时间复杂度是 $\mathcal O(n)$ 的，那么执行 $n$ 次也就是 $\mathcal O(n^2)$ 的</p><h2 id="模拟题自测"><a href="#模拟题自测" class="headerlink" title="模拟题自测"></a>模拟题自测</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">3、下列说法错误的是（）。</span><br><span class="line">A、栈和队列的存储方式既可是顺序方式，也可是链式方式</span><br><span class="line">B、线性表在物理存储空间中不一定是连续的</span><br><span class="line">C、二叉树中每个节点的两棵子树高度差为1</span><br><span class="line">D、对于一棵非空二叉树，它的根节点作为第一层，则第i层至多有2^(i-1)个节点</span><br></pre></td></tr></table></figure><p>​    显然选 C，因为很容易举出反例。</p><p><img src="https://i.loli.net/2020/10/09/rYGOepZQksqN68m.png" alt="image-20201009004906424"></p><p><code>memset(a,255,sizeof(a))</code> 等价于将 a 全部赋值为 $-1$ </p><h2 id="一些知识点总结"><a href="#一些知识点总结" class="headerlink" title="一些知识点总结"></a>一些知识点总结</h2><h3 id="局域网、城域网、广域网、个人局域网"><a href="#局域网、城域网、广域网、个人局域网" class="headerlink" title="局域网、城域网、广域网、个人局域网"></a>局域网、城域网、广域网、个人局域网</h3><ul><li>LAN：局域网</li><li>MAN：城域网</li><li>WAN：广域网</li><li>PAN：个人局域网</li></ul><p>RAM 中的信息是 <strong>计算机工作时随机写入的</strong>（NOIP2000 普及）</p><p>用静电吸附墨粉后转移到纸张上，是 <strong>激光打印机</strong> 的工作方式（NOIP 2004）</p><p>彩色图像以位图形式保存时，若色深为 $n$，分辨率为 $x \times y$，则为 $n \times x \times y$ bit</p><ul><li>1B=8bit</li><li>1KB=1024B</li><li>1MB=1024KB</li><li>1GB=1024MB</li><li>1TB=1024GB</li></ul><h3 id="二叉树的若干性质"><a href="#二叉树的若干性质" class="headerlink" title="二叉树的若干性质"></a>二叉树的若干性质</h3><ul><li>在二叉树的第 $i$ 层上最多有 $2^{i-1}$ 个结点（$i \ge 1$）</li><li>深度为 $k$ 的二叉树至多有 $2^{k} - 1$ 个结点（满二叉树）</li><li>对于任意一棵二叉树，如果其叶结点数为 $n_0$，而度数为 $2$ 的结点总数为 $n_2$，则有 $n_0=n_2+1$</li><li>具有 $n$ 个结点的完全二叉树的深度为 $\lfloor \log_2n \rfloor+1$</li></ul><h3 id="遍历二叉树"><a href="#遍历二叉树" class="headerlink" title="遍历二叉树"></a>遍历二叉树</h3><p>前序遍历：根结点 左子树 右子树<br>中序遍历：左子树 根结点 右子树<br>后序遍历：左子树 右子树 根结点</p><h4 id="知前序、中序"><a href="#知前序、中序" class="headerlink" title="知前序、中序"></a>知前序、中序</h4><p>前序：ABCDEFG<br>中序：CBEDAFG<br>前序找到 A 为根，在中序中找到左子树 BCDE、右子树 FG<br>前序找到 B 为根，在中序中找到左子树 C、右子树 DE<br>前序找到 D 为根，在中序中找到左子树 E、无右子树<br>前序找到 F 为根，在中序中找到右子树 G、无左子树</p><p><img src="https://i.loli.net/2020/10/09/9xLqbzh7PcndkaG.png" alt="image-20201009012139226"></p><h4 id="知后序、中序"><a href="#知后序、中序" class="headerlink" title="知后序、中序"></a>知后序、中序</h4><p>后序：ABFHGEDC<br>中序：ABCEFGHD<br>后序找到 C 为根，在中序中找到左子树 AB、右子树 EFGHD<br>后序找到 B 为根，在中序中找到左子树 A、无右子树<br>后序找到 D 为根，在中序中找到左子树 EFGH、无右子树<br>后序找到 E 为根，在中序中找到右子树 FGH、无左子树<br>后序找到 G 为根，在中序中找到左子树 F、右子树 H</p><p><img src="https://i.loli.net/2020/10/09/35YxNhmUeLFvgWr.png" alt="image-20201009012850075"></p><h3 id="排列组合"><a href="#排列组合" class="headerlink" title="排列组合"></a>排列组合</h3><script type="math/tex; mode=display">P_n^k=\dfrac{n!}{(n-k)!}\\C_{n}^{k}=\binom{n}{k}=\dfrac{P_{n}^{k}}{P_{k}^{k}}=\dfrac{n!}{k!(n-k)!}\\S(n,m)=\begin {Bmatrix} n \\ m\end {Bmatrix}={\frac 1 {m!}}\sum_{k=0}^m (-1)^k\binom{m}{k}(m-k)^n \\</script><script type="math/tex; mode=display">{\binom{7}{2}}</script><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;初赛过了&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="记录" scheme="http://answerend42.github.io/categories/%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="初赛" scheme="http://answerend42.github.io/tags/%E5%88%9D%E8%B5%9B/"/>
    
      <category term="集合" scheme="http://answerend42.github.io/tags/%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>P1535 【[USACO08MAR]Cow Travelling S】</title>
    <link href="http://answerend42.github.io/2020/10/06/lg1535/"/>
    <id>http://answerend42.github.io/2020/10/06/lg1535/</id>
    <published>2020-10-06T15:21:40.000Z</published>
    <updated>2020-10-28T15:34:09.976Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1535" target="_blank" rel="noopener">原题链接</a></p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>​    给定两点 $(x_1,y_1),(x_2,y_2)$，规定不超过 $t$ 步求从第一个点到第二个点的路径条数。</p><a id="more"></a><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>​    看上去就能搜，问题是超时是无法避免的，重点在于考虑如何优化。</p><p>​    这里提供一个看似无关紧要但卡常很实用的范围判断优化。对于判断 $x \in [l,r]$，一种常规写法是 <code>l&lt;=x&amp;&amp;x&lt;=r</code>，实际上有更快的写法是 <code>(x-l)|(r-x)&gt;=0</code>，具体原理可以参考<a href="https://www.zhihu.com/question/27417946/answer/1253126563" target="_blank" rel="noopener">韦易笑的知乎回答</a>、<a href="https://zhuanlan.zhihu.com/p/147039093" target="_blank" rel="noopener">回答2</a>。</p><p>​    但是，即便是加上这个优化，也仅仅从 40 到了 50，并没有满足我们的要求。</p><p>​    考虑一个可行性剪枝，也就是考虑当前剩余步数不足以到达终点时，直接跳出，也就可以AC了</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> dx[] = &#123; <span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span> &#125;, dy[] = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> n, m, t, sa, sb, ea, eb, ans;</span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line"><span class="keyword">bool</span> okk[<span class="number">105</span>][<span class="number">105</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> cur)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == ea &amp;&amp; y == eb &amp;&amp; cur == <span class="number">0</span>)</span><br><span class="line">        ans++;</span><br><span class="line">    <span class="keyword">if</span> (!cur || <span class="built_in">abs</span>(ea - x) + <span class="built_in">abs</span>(eb - y) &gt; cur)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> xx = dx[i] + x, yy = dy[i] + y;</span><br><span class="line">        <span class="keyword">if</span> (okk[xx][yy])</span><br><span class="line">            dfs(xx, yy, cur - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cout</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m &gt;&gt; t;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++) &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; ch;</span><br><span class="line">            <span class="keyword">if</span> (ch == <span class="string">'.'</span> &amp;&amp; ((i - <span class="number">1</span>) | (n - i) | (j - <span class="number">1</span>) | (m - j)) &gt;= <span class="number">0</span>)</span><br><span class="line">                okk[i][j] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; sa &gt;&gt; sb &gt;&gt; ea &gt;&gt; eb;</span><br><span class="line">    dfs(sa, sb, t);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P1535&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原题链接&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;​    给定两点 $(x_1,y_1),(x_2,y_2)$，规定不超过 $t$ 步求从第一个点到第二个点的路径条数。&lt;/p&gt;
    
    </summary>
    
    
      <category term="题解" scheme="http://answerend42.github.io/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="深度优先搜索dfs" scheme="http://answerend42.github.io/tags/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2dfs/"/>
    
      <category term="剪枝" scheme="http://answerend42.github.io/tags/%E5%89%AA%E6%9E%9D/"/>
    
  </entry>
  
  <entry>
    <title>Aha-Round-1</title>
    <link href="http://answerend42.github.io/2020/08/18/Aha-Round-1/"/>
    <id>http://answerend42.github.io/2020/08/18/Aha-Round-1/</id>
    <published>2020-08-17T16:33:39.000Z</published>
    <updated>2020-10-03T09:54:08.322Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>团队要走的路还很远啊……</p></blockquote><a id="more"></a><h2 id="Pj"><a href="#Pj" class="headerlink" title="Pj"></a>Pj</h2><h3 id="T1-IOI-AKer"><a href="#T1-IOI-AKer" class="headerlink" title="T1 IOI AKer"></a>T1 <a href="https://www.luogu.com.cn/problem/T143359" target="_blank" rel="noopener">IOI AKer</a></h3><p>​    本场签到题，AC 占比 $\dfrac{13}{16}$ </p><p>​    很简单的字符串模拟</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">string</span> s;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    getline(<span class="built_in">cin</span>,s);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; s;</span><br><span class="line">    <span class="keyword">if</span>(s==<span class="string">"dbxxx"</span>||s==<span class="string">"DBXXX"</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">" csl /weak"</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">" AK IOI! /strong"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="T2-清理收藏夹"><a href="#T2-清理收藏夹" class="headerlink" title="T2 清理收藏夹"></a>T2 <a href="https://www.luogu.com.cn/problem/T143360" target="_blank" rel="noopener">清理收藏夹</a></h3><p>​    很繁琐，赛时最高 14，最低 4 分，得分占比 $\dfrac{3}{16}$</p><p>​    先来吐槽一下题面，看上去很花，很大程度上让人不太想开这道题，细节也颇多，作为 pjT2 是彻底失败的。但是出题人 dbxxx 还是下了很大力气的。</p><h3 id="T3-巧克力机器"><a href="#T3-巧克力机器" class="headerlink" title="T3 巧克力机器"></a>T3 <a href="https://www.luogu.com.cn/problem/T143361" target="_blank" rel="noopener">巧克力机器</a></h3><p>​    有趣的区间 $\text{DP}$,比赛没来得及做。</p><h3 id="T4-加工伸缩门"><a href="#T4-加工伸缩门" class="headerlink" title="T4 加工伸缩门"></a>T4 <a href="https://www.luogu.com.cn/problem/T143362" target="_blank" rel="noopener">加工伸缩门</a></h3><p>​    组合数学神仙题，建议膜拜出题人：dbxxx</p><p><a href="https://www.luogu.com.cn/paste/pmgqz97r" target="_blank" rel="noopener">Pj题解</a>。</p><h2 id="Tg"><a href="#Tg" class="headerlink" title="Tg"></a>Tg</h2><h3 id="T1-function"><a href="#T1-function" class="headerlink" title="T1 function"></a>T1 <a href="https://www.luogu.com.cn/problem/T143365" target="_blank" rel="noopener">function</a></h3><p>​    有趣的数学题，数据范围对于这种题是没有意义的，所以直接上 python，不打高精了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">s=input()</span><br><span class="line">a=int(s.split(<span class="string">" "</span>)[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">if</span>(a%<span class="number">3</span>!=<span class="number">0</span>) :</span><br><span class="line">    print(<span class="string">"Aha"</span>)</span><br><span class="line"><span class="keyword">else</span> :</span><br><span class="line">    print(a//<span class="number">3</span>,<span class="string">""</span>,end=<span class="string">""</span>)</span><br><span class="line">    print(a//<span class="number">3</span>,<span class="string">""</span>,end=<span class="string">""</span>)</span><br><span class="line">    print(a//<span class="number">3</span>+a-a//<span class="number">3</span>*<span class="number">3</span>,end=<span class="string">""</span>)</span><br></pre></td></tr></table></figure><h3 id="T2-￥"><a href="#T2-￥" class="headerlink" title="T2 ￥"></a>T2 <a href="https://www.luogu.com.cn/problem/T143364" target="_blank" rel="noopener">￥</a></h3><p>​    状压 $\text{DP}$,不会（</p><h3 id="T3-绝世唐门"><a href="#T3-绝世唐门" class="headerlink" title="T3 绝世唐门"></a>T3 <a href="https://www.luogu.com.cn/problem/T143363" target="_blank" rel="noopener">绝世唐门</a></h3><p>​    毒瘤图论，不过用到的算法不太复杂。</p><p><a href="https://www.luogu.com.cn/paste/cqsgmh8g" target="_blank" rel="noopener">Tg题解</a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>​    大家的参赛热情都很高，题目质量也很好，一些关键的细节把握不到位，作为一个新生团队，已经是很不错的水平了。</p><blockquote><p>Gar：多练可破。</p></blockquote><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;团队要走的路还很远啊……&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="比赛" scheme="http://answerend42.github.io/categories/%E6%AF%94%E8%B5%9B/"/>
    
    
      <category term="字符串" scheme="http://answerend42.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="模拟" scheme="http://answerend42.github.io/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="动态规划" scheme="http://answerend42.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="区间DP" scheme="http://answerend42.github.io/tags/%E5%8C%BA%E9%97%B4DP/"/>
    
      <category term="状压DP" scheme="http://answerend42.github.io/tags/%E7%8A%B6%E5%8E%8BDP/"/>
    
      <category term="数论" scheme="http://answerend42.github.io/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="高精度" scheme="http://answerend42.github.io/tags/%E9%AB%98%E7%B2%BE%E5%BA%A6/"/>
    
      <category term="最小生成树" scheme="http://answerend42.github.io/tags/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/"/>
    
      <category term="图论" scheme="http://answerend42.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="广度优先搜索bfs" scheme="http://answerend42.github.io/tags/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2bfs/"/>
    
  </entry>
  
  <entry>
    <title>暑假线下集训总结</title>
    <link href="http://answerend42.github.io/2020/08/01/%E6%9A%91%E5%81%87%E7%BA%BF%E4%B8%8B%E9%9B%86%E8%AE%AD%E6%80%BB%E7%BB%93/"/>
    <id>http://answerend42.github.io/2020/08/01/%E6%9A%91%E5%81%87%E7%BA%BF%E4%B8%8B%E9%9B%86%E8%AE%AD%E6%80%BB%E7%BB%93/</id>
    <published>2020-07-31T16:10:30.000Z</published>
    <updated>2020-10-28T05:36:57.358Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>​    中考完第二天就开始了集训，说实话，是既兴奋又紧张。一切似乎都是新的，让第二次来的我充满新鲜感（<del>第一天不知道机房位置，还是跟着同学去的</del>）。</p><a id="more"></a><h2 id="集训中的感想"><a href="#集训中的感想" class="headerlink" title="集训中的感想"></a>集训中的感想</h2><p>​    身边都是很优秀的同龄人，在一起刷题感到很有斗志，果然在学校刷题和在家里刷题是完全不同的。</p><h2 id="部分题目总结"><a href="#部分题目总结" class="headerlink" title="部分题目总结"></a>部分题目总结</h2><h3 id="真题练习（2020-7-22）"><a href="#真题练习（2020-7-22）" class="headerlink" title="真题练习（2020.7.22）"></a>真题练习（2020.7.22）</h3><ul><li><p><a href="https://www.luogu.com.cn/problemnew/show/P1563" target="_blank" rel="noopener"><strong>P1563</strong> 玩具谜题</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/P2615" target="_blank" rel="noopener"><strong>P2615</strong> 神奇的幻方</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/P3958" target="_blank" rel="noopener"><strong>P3958</strong> 奶酪</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/P1328" target="_blank" rel="noopener"><strong>P1328</strong> 生活大爆炸版石头剪刀布</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/P2822" target="_blank" rel="noopener"><strong>P2822</strong> 组合数问题</a></p><p>这五道题是第一天的练手题，也是历年的真题，难度在接受范围以内，我之前除第五题都做过。</p><p>第五题还没有做，先 gugugu</p></li></ul><h3 id="单调队列（2020-7-22）"><a href="#单调队列（2020-7-22）" class="headerlink" title="单调队列（2020.7.22）"></a>单调队列（2020.7.22）</h3><ul><li><p><a href="https://www.luogu.com.cn/problemnew/show/P1440" target="_blank" rel="noopener"><strong>P1440</strong> 求m区间内的最小值</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/P1886" target="_blank" rel="noopener"><strong>P1886</strong> 滑动窗口 /【模板】单调队列</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/P3088" target="_blank" rel="noopener"><strong>P3088</strong>  [USACO13NOV]Crowded Cows S</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/P1725" target="_blank" rel="noopener"><strong>P1725</strong> 琪露诺</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/U88745" target="_blank" rel="noopener"><strong>U88745</strong> 最大子序和</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/U88746" target="_blank" rel="noopener"><strong>U88746</strong> 烽火传递</a></p><p>这六题是第一天所讲的单调队列题目，其中有版子题，也有根据单调队列优化 dp 的内容。我还不大会优化 dp，先放出模板题的代码。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2</span>*<span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n,m; </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> val,pos;</span><br><span class="line">&#125;e[N];</span><br><span class="line"><span class="built_in">deque</span>&lt;Node&gt; q;</span><br><span class="line"><span class="keyword">int</span> ans[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;e[i].val);</span><br><span class="line">e[i].pos=i<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">ans[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line"><span class="comment">//保证是个队列 且保证单调性 </span></span><br><span class="line">        <span class="keyword">while</span>(!q.empty()&amp;&amp;q.back().val&gt;e[i].val)</span><br><span class="line">q.pop_back();</span><br><span class="line"><span class="comment">//新元素入队 </span></span><br><span class="line">q.push_back(e[i]);</span><br><span class="line">        <span class="keyword">while</span>(!q.empty()&amp;&amp;q.front().pos&lt;i-m)</span><br><span class="line">            q.pop_front();</span><br><span class="line">        ans[i]=q.front().val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="字符串问题（2020-7-23）"><a href="#字符串问题（2020-7-23）" class="headerlink" title="字符串问题（2020.7.23）"></a>字符串问题（2020.7.23）</h3><ul><li><p><a href="https://www.luogu.com.cn/problemnew/show/P3375" target="_blank" rel="noopener"><strong>P3375</strong> 【模板】KMP字符串匹配</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/P2375" target="_blank" rel="noopener"><strong>P2375</strong> [NOI2014]动物园</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/P2580" target="_blank" rel="noopener"><strong>P2580</strong> 于是他错误的点名开始了</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/P2292" target="_blank" rel="noopener"><strong>P2292</strong> [HNOI2004]L语言</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/P3808" target="_blank" rel="noopener"><strong>P3808</strong> 【模板】AC自动机（简单版）</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/U88779" target="_blank" rel="noopener"><strong>U88779</strong> keywords search</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/P3796" target="_blank" rel="noopener"><strong>P3796</strong> 【模板】AC自动机（加强版）</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/P2414" target="_blank" rel="noopener"><strong>P2414</strong> [NOI2011]阿狸的打字机</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/CF1200E" target="_blank" rel="noopener"><strong>CF1200E</strong> Compress Words</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/P4824" target="_blank" rel="noopener"><strong>P4824</strong> [USACO15FEB]Censoring S</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/P3435" target="_blank" rel="noopener"><strong>P3435</strong> [POI2006]OKR-Periods of Words</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/P3121" target="_blank" rel="noopener"><strong>P3121</strong> [USACO15FEB]Censoring G</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/P3966" target="_blank" rel="noopener"><strong>P3966</strong> [TJOI2013]单词</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/P3041" target="_blank" rel="noopener"><strong>P3041</strong> [USACO12JAN]Video Game G</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/P3311" target="_blank" rel="noopener"><strong>P3311</strong> [SDOI2014] 数数</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/P4052" target="_blank" rel="noopener"><strong>P4052</strong> [JSOI2007]文本生成器</a></p><p>大都不会做，可以说是找到软肋了。</p></li></ul><h3 id="树状数组"><a href="#树状数组" class="headerlink" title="树状数组"></a>树状数组</h3><ul><li><p><a href="https://www.luogu.com.cn/problemnew/show/P3374" target="_blank" rel="noopener"><strong>P3374</strong> 【模板】树状数组 1</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/P2068" target="_blank" rel="noopener"><strong>P2068</strong> 统计和</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/U88769" target="_blank" rel="noopener"><strong>U88769</strong> 数列操作</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/P3368" target="_blank" rel="noopener"><strong>P3368</strong> 【模板】树状数组 2</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/P1966" target="_blank" rel="noopener"><strong>P1966</strong> 火柴排队</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/P1637" target="_blank" rel="noopener"><strong>P1637</strong> 三元上升子序列</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/P1774" target="_blank" rel="noopener"><strong>P1774</strong> 最接近神的人</a></p><p>除了三元上升子序列全部都做完了，三元上升子序列只打了暴力。</p><p>给出树状数组知道的使用方法</p><p>单点查询 区间查询 单点修改 区间修改</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;<span class="keyword">return</span> x&amp;-x;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(;x&lt;=n;x+=lowbit(x))</span><br><span class="line">        t[x]+=k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//单点加上 k</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ask</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(;x;x-=x&amp;-x)</span><br><span class="line">        ans+=t[x];</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//单点查询</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//对于区间修改，我们可以使用差分来完成</span></span><br><span class="line"><span class="comment">//add(x,a[i]-a[i-1])</span></span><br><span class="line"><span class="comment">//此时将 l~r 全部加上 k 只需</span></span><br><span class="line"><span class="comment">//add(x,k) add(y-1,-k)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//对于区间查询，我们可以使用前缀和来完成</span></span><br><span class="line"><span class="comment">//ask(r)-ask(l-1)</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="Nauuo-的模拟赛（2020-7-24）"><a href="#Nauuo-的模拟赛（2020-7-24）" class="headerlink" title="Nauuo 的模拟赛（2020.7.24）"></a>Nauuo 的模拟赛（2020.7.24）</h3><p> <a href="https://www.luogu.com.cn/problemnew/show/P4964" target="_blank" rel="noopener"><strong>P4964</strong> 绫小路的特别考试</a></p><p>​    这就是要补的题了</p><h3 id="manacher（2020-7-27）"><a href="#manacher（2020-7-27）" class="headerlink" title="manacher（2020.7.27）"></a>manacher（2020.7.27）</h3><ul><li><p><a href="https://www.luogu.com.cn/problemnew/show/P3805" target="_blank" rel="noopener"><strong>P3805</strong> 【模板】manacher算法</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/P1659" target="_blank" rel="noopener"><strong>P1659</strong> [国家集训队]拉拉队排练</a></p></li><li><p><a href="https://www.luogu.com.cn/problemnew/show/P4555" target="_blank" rel="noopener"><strong>P4555</strong> [国家集训队]最长双回文串</a></p><p>最长双回文子串要补。</p></li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;​    中考完第二天就开始了集训，说实话，是既兴奋又紧张。一切似乎都是新的，让第二次来的我充满新鲜感（&lt;del&gt;第一天不知道机房位置，还是跟着同学去的&lt;/del&gt;）。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>2月flag汇总</title>
    <link href="http://answerend42.github.io/2020/05/01/2%E6%9C%88flag%E6%B1%87%E6%80%BB/"/>
    <id>http://answerend42.github.io/2020/05/01/2%E6%9C%88flag%E6%B1%87%E6%80%BB/</id>
    <published>2020-04-30T16:08:45.000Z</published>
    <updated>2020-07-27T12:44:08.741Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><del>精彩打脸合集</del></p></blockquote><a id="more"></a><blockquote><p><a href="https://www.luogu.com.cn/problem/P3133" target="_blank" rel="noopener">P3133 [USACO16JAN]Radio Contact G</a></p><p>一道DP，不会推式子，以后要复习</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">f[i][j] 表示 FJ 第 i 步，BS 第 j 步时的最小花费</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">可以从以下三种情况转移过来</span></span><br><span class="line"><span class="comment">1. FJ 不动 BS 动</span></span><br><span class="line"><span class="comment">2. FJ 动 BS 不动</span></span><br><span class="line"><span class="comment">3. FJ 不动 BS 不动</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">f[i][j]=min(f[i-1][j],min(f[i][j-1],f[i-1][j-1]))+dis(i,j);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">&#125;fj[<span class="number">1005</span>],bs[<span class="number">1005</span>];</span><br><span class="line"><span class="keyword">int</span> n,m,f[<span class="number">1005</span>][<span class="number">1005</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">dis</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (fj[i].x-bs[j].x)*(fj[i].x-bs[j].x)+(fj[i].y-bs[j].y)*(fj[i].y-bs[j].y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d%d%d"</span>,&amp;n,&amp;m,&amp;fj[<span class="number">0</span>].x,&amp;fj[<span class="number">0</span>].y,&amp;bs[<span class="number">0</span>].x,&amp;bs[<span class="number">0</span>].y);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        <span class="keyword">char</span> c;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;c;</span><br><span class="line">        <span class="keyword">if</span>(c==<span class="string">'N'</span>)</span><br><span class="line">            fj[i].y=fj[i<span class="number">-1</span>].y+<span class="number">1</span>,fj[i].x=fj[i<span class="number">-1</span>].x;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(c==<span class="string">'S'</span>)</span><br><span class="line">            fj[i].y=fj[i<span class="number">-1</span>].y<span class="number">-1</span>,fj[i].x=fj[i<span class="number">-1</span>].x;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(c==<span class="string">'W'</span>)</span><br><span class="line">            fj[i].y=fj[i<span class="number">-1</span>].y,fj[i].x=fj[i<span class="number">-1</span>].x<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(c==<span class="string">'E'</span>)</span><br><span class="line">            fj[i].y=fj[i<span class="number">-1</span>].y,fj[i].x=fj[i<span class="number">-1</span>].x+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) &#123;</span><br><span class="line">        <span class="keyword">char</span> c;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;c;</span><br><span class="line">        <span class="keyword">if</span>(c==<span class="string">'N'</span>)</span><br><span class="line">            bs[i].y=bs[i<span class="number">-1</span>].y+<span class="number">1</span>,bs[i].x=bs[i<span class="number">-1</span>].x;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(c==<span class="string">'S'</span>)</span><br><span class="line">            bs[i].y=bs[i<span class="number">-1</span>].y<span class="number">-1</span>,bs[i].x=bs[i<span class="number">-1</span>].x;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(c==<span class="string">'W'</span>)</span><br><span class="line">            bs[i].y=bs[i<span class="number">-1</span>].y,bs[i].x=bs[i<span class="number">-1</span>].x<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(c==<span class="string">'E'</span>)</span><br><span class="line">            bs[i].y=bs[i<span class="number">-1</span>].y,bs[i].x=bs[i<span class="number">-1</span>].x+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">    f[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) f[i][<span class="number">0</span>]=f[i<span class="number">-1</span>][<span class="number">0</span>]+dis(i,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) f[<span class="number">0</span>][i]=f[<span class="number">0</span>][i<span class="number">-1</span>]+dis(<span class="number">0</span>,i);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            f[i][j]=min(f[i<span class="number">-1</span>][j],min(f[i][j<span class="number">-1</span>],f[i<span class="number">-1</span>][j<span class="number">-1</span>]))+dis(i,j);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,f[n][m]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://www.luogu.com.cn/problem/P4779" target="_blank" rel="noopener">P4779 【模板】单源最短路径（标准版）</a></p><p>复习了dijkstra，还是不熟，多次WA</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; PII;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mp make_pair</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100005</span>,M = N*<span class="number">2</span>;</span><br><span class="line"><span class="keyword">int</span> dis[N],book[N],first[N],nxt[M],v[M],w[M],idx,n,m,s,x,y,z;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> z)</span> </span>&#123;</span><br><span class="line">    v[++idx]=y;</span><br><span class="line">    w[idx]=z;</span><br><span class="line">    nxt[idx]=first[x];</span><br><span class="line">    first[x]=idx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dij</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) dis[i]=<span class="number">1e10</span>;</span><br><span class="line">    priority_queue&lt;PII&gt; q;</span><br><span class="line">    dis[s]=<span class="number">0</span>;</span><br><span class="line">    q.push(mp(<span class="number">0</span>,s));</span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        <span class="keyword">int</span> t=q.top().se;</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">if</span>(book[t]) <span class="keyword">continue</span>;</span><br><span class="line">        book[t]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=first[t];i;i=nxt[i]) &#123;</span><br><span class="line">            <span class="keyword">if</span>(dis[t]+w[i]&lt;dis[v[i]]) &#123;</span><br><span class="line">                dis[v[i]]=dis[t]+w[i];</span><br><span class="line">                q.push(mp(-dis[v[i]],v[i]));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="comment">//17行挺好打的</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;n,&amp;m,&amp;s);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)  &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;x,&amp;y,&amp;z);</span><br><span class="line">        add(x,y,z);</span><br><span class="line">    &#125;</span><br><span class="line">    dij();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">printf</span>(<span class="string">"%d "</span>,dis[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://www.luogu.com.cn/problem/P2015" target="_blank" rel="noopener">P2015 二叉苹果树</a></p><p>AC了但确实不会，要复习</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">f[u][j] 表示以 u 为子树根节点保留 j 条边时的最大苹果数</span></span><br><span class="line"><span class="comment">son[u][0] 表示 u 的左儿子，son[u][1] 表示 u 的右儿子</span></span><br><span class="line"><span class="comment">apple[u][0] 表示 u与 u 的左儿子连边的苹果数，apple[u][1] 表示 u与 u 的右儿子连边的苹果数</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">用 k 表示保留给以 u 为根节点的子树中分配给 u 的左节点能够保留的边</span></span><br><span class="line"><span class="comment">1. k==0，干掉左子树，探寻右子树的情况</span></span><br><span class="line"><span class="comment">2. k==j，干掉右子树，探寻左子树的情况</span></span><br><span class="line"><span class="comment">3. k&gt;0&amp;&amp;k&lt;j，给左子树 k 条边，右子树 j-k 条边</span></span><br><span class="line"><span class="comment">（实际上如果要保留一棵子树就必定与根节点连有边，所以边的数量-1）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">1. f[u][j]=max(f[u][j],f[son[u][1]][j-1]+apple[u][1]);</span></span><br><span class="line"><span class="comment">2. f[u][j]=max(f[u][j],f[son[u][0]][j-1]+apple[u][0]);</span></span><br><span class="line"><span class="comment">3. f[u][j]=max(f[u][j],f[son[u][0]][k-1]+apple[u][0]+f[son[u][1]][j-k-1]+apple[u][1]);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">思路：</span></span><br><span class="line"><span class="comment">    1. 边权转点权</span></span><br><span class="line"><span class="comment">    2. 树形DP</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">105</span>,M=N*<span class="number">2</span>;</span><br><span class="line"><span class="keyword">int</span> n,q,idx;</span><br><span class="line"><span class="keyword">int</span> first[N],nxt[M],v[M],w[M];</span><br><span class="line"><span class="keyword">int</span> son[N][<span class="number">2</span>],apple[N][<span class="number">2</span>],f[N][N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> z)</span> </span>&#123;</span><br><span class="line">    v[++idx]=y;</span><br><span class="line">    w[idx]=z;</span><br><span class="line">    nxt[idx]=first[x];</span><br><span class="line">    first[x]=idx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> father)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> idx2=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=first[u];i;i=nxt[i]) &#123;</span><br><span class="line">        <span class="keyword">if</span>(v[i]!=father) &#123;</span><br><span class="line">            son[u][idx2]=v[i];<span class="comment">//找儿子</span></span><br><span class="line">            apple[u][idx2]=w[i];<span class="comment">//苹果个数</span></span><br><span class="line">            idx2++;</span><br><span class="line">            dfs(v[i],u);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=q;j++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;=j;k++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(k==<span class="number">0</span>)</span><br><span class="line">                f[u][j]=max(f[u][j],f[son[u][<span class="number">1</span>]][j<span class="number">-1</span>]+apple[u][<span class="number">1</span>]);</span><br><span class="line">            <span class="comment">//1个都不留的情况，由于本身与根节点有一条边，另一个只能是j-1</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(k==j)</span><br><span class="line">                f[u][j]=max(f[u][j],f[son[u][<span class="number">0</span>]][j<span class="number">-1</span>]+apple[u][<span class="number">0</span>]);</span><br><span class="line">            <span class="comment">//all in</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            f[u][j]=max(f[u][j],f[son[u][<span class="number">0</span>]][k<span class="number">-1</span>]+apple[u][<span class="number">0</span>]+f[son[u][<span class="number">1</span>]][j-k<span class="number">-1</span>]+apple[u][<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;q);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,x,y,z;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;x,&amp;y,&amp;z);</span><br><span class="line">        add(x,y,z);</span><br><span class="line">        add(y,x,z);</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,f[<span class="number">1</span>][q]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;del&gt;精彩打脸合集&lt;/del&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="记录" scheme="http://answerend42.github.io/categories/%E8%AE%B0%E5%BD%95/"/>
    
    
  </entry>
  
  <entry>
    <title>Codeforces Round 636 (Div. 3)</title>
    <link href="http://answerend42.github.io/2020/04/26/cf1343/"/>
    <id>http://answerend42.github.io/2020/04/26/cf1343/</id>
    <published>2020-04-26T09:27:30.000Z</published>
    <updated>2020-11-12T12:02:53.213Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>日常三题选手…</p><p><img src="https://cdn.jsdelivr.net/gh/BoringHacker/cdn/emojis/majsoul/maj-38.png" alt=""></p></blockquote><a id="more"></a><h2 id="A-Candies"><a href="#A-Candies" class="headerlink" title="A. Candies"></a><a href="https://codeforces.com/contest/1343/problem/A" target="_blank" rel="noopener">A. Candies</a></h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一个整数 $n$，$k$ 为大于 $1$ 的任意整数，求解方程 $x + 2x + 4x + \dots + 2^{k-1} x = n$。</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>可以计算得出实质上在求 $(2^{k}-1)x=n$，枚举一下 $2^k-1$，对于 $n \mid 2^k-1$，输出 $x=\dfrac{n}{2^k-1}$。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> _,n;</span><br><span class="line">ll idx[<span class="number">10005</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    idx[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">63</span>;i++) idx[i]=<span class="built_in">pow</span>(<span class="number">2</span>,i)<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;_);_;_--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">63</span>;i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(n%idx[i]==<span class="number">0</span>) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,n/idx[i]);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B-Balanced-Array"><a href="#B-Balanced-Array" class="headerlink" title="B. Balanced Array"></a><a href="https://codeforces.com/contest/1343/problem/B" target="_blank" rel="noopener">B. Balanced Array</a></h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一个正整数 $n(n \mid 2)$，构造一个长度为 $n$ 的数组 $a$ 使得 $a$ 的前半部分之和与后半部分之和相等，同时 $a$ 的前半部分都是偶数，后半部分都是奇数，$a$ 中每一个数都不相等。</p><h3 id="解法-1"><a href="#解法-1" class="headerlink" title="解法"></a>解法</h3><p>首先思考最小的部分（常用套路），发现 $n=2$ 一定无解，$n=4$ 一定有解。观察样例提示可以发现对于任意 $n \mid 4$ 都是有解的，其他则一定无解。构造方式也比较套路，对于 $1 \sim \dfrac{n}{2}$,$a<em>i = 2^i$,对于 $\dfrac{n}{2}+1 \sim n$ , $a_i=a</em> { i - \frac{n}{2} } - 1$ ,再对最后一个数处理一下  $a_n \gets a_n+\dfrac{n}{2}$，就成功的构造出来了。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> _,a[<span class="number">200005</span>],n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;_);_;_--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="keyword">if</span>(n%<span class="number">4</span>!=<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line">            <span class="keyword">int</span> idx=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i+=<span class="number">2</span>) &#123;</span><br><span class="line">                a[++idx]=i;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n/<span class="number">2</span><span class="number">-1</span>;i++) &#123;</span><br><span class="line">                idx++;</span><br><span class="line">                a[idx]=a[idx-n/<span class="number">2</span>]<span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            idx++;</span><br><span class="line">            a[idx]=a[idx-n/<span class="number">2</span>]+n/<span class="number">2</span><span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">printf</span>(<span class="string">"%d "</span>,a[i]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-Alternating-Subsequence"><a href="#C-Alternating-Subsequence" class="headerlink" title="C. Alternating Subsequence"></a><a href="https://codeforces.com/contest/1343/problem/C" target="_blank" rel="noopener">C. Alternating Subsequence</a></h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定长度为 $n$ 的序列 $a$，要求求出最长的一正一负的 $a$ 的子序列中的最大和。</p><h3 id="解法-2"><a href="#解法-2" class="headerlink" title="解法"></a>解法</h3><p>题目要求了最长，可以直接每一段连续区间中只取一个最大的，保证最终和最大。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//https://codeforces.com/contest/1343/problem/C</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> _,n,a[<span class="number">200005</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;_);_;_--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">1</span>,maxx,minx;</span><br><span class="line">        ll sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i!=n+<span class="number">1</span>) &#123;</span><br><span class="line">            maxx=<span class="number">-0x3f3f3f3f</span>;</span><br><span class="line">            minx=<span class="number">-0x3f3f3f3f</span>;</span><br><span class="line">            <span class="keyword">while</span>(a[i]&gt;<span class="number">0</span>&amp;&amp;i!=n+<span class="number">1</span>) &#123;</span><br><span class="line">                maxx=max(maxx,a[i]);</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(a[i<span class="number">-1</span>]&gt;<span class="number">0</span>) sum+=maxx;</span><br><span class="line">            <span class="keyword">while</span>(a[i]&lt;<span class="number">0</span>&amp;&amp;i!=n+<span class="number">1</span>) &#123;</span><br><span class="line">                minx=max(minx,a[i]);</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(a[i<span class="number">-1</span>]&lt;<span class="number">0</span>) sum+=minx;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,sum);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D-Constant-Palindrome-Sum"><a href="#D-Constant-Palindrome-Sum" class="headerlink" title="D. Constant Palindrome Sum"></a><a href="https://codeforces.com/contest/1343/problem/D" target="_blank" rel="noopener">D. Constant Palindrome Sum</a></h2><p>题目太神仙了，赛后看题解搞出来了，一时半会也不知道怎么做。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;日常三题选手…&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/BoringHacker/cdn/emojis/majsoul/maj-38.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="比赛" scheme="http://answerend42.github.io/categories/%E6%AF%94%E8%B5%9B/"/>
    
    
      <category term="模拟" scheme="http://answerend42.github.io/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="构造" scheme="http://answerend42.github.io/tags/%E6%9E%84%E9%80%A0/"/>
    
      <category term="贪心" scheme="http://answerend42.github.io/tags/%E8%B4%AA%E5%BF%83/"/>
    
      <category term="数学" scheme="http://answerend42.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>Codeforces Round 635 (Div. 2)</title>
    <link href="http://answerend42.github.io/2020/04/24/cf1337/"/>
    <id>http://answerend42.github.io/2020/04/24/cf1337/</id>
    <published>2020-04-24T13:13:19.000Z</published>
    <updated>2020-10-28T05:39:56.456Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>中国场！莫名的激动。题目的风格真的和出题人有关，<del>虽然我只做了三题</del></p></blockquote><a id="more"></a><h2 id="A-Ichihime-and-Triangle"><a href="#A-Ichihime-and-Triangle" class="headerlink" title="A. Ichihime and Triangle"></a><a href="https://codeforces.ml/contest/1337/problem/A" target="_blank" rel="noopener">A. Ichihime and Triangle</a></h2><h3 id="题意描述"><a href="#题意描述" class="headerlink" title="题意描述"></a>题意描述</h3><p>给定 $a,b,c,d$ 其中 $a \le b \le c \le d$，试找到 $x,y,z$ 其中 </p><ul><li>$a \leq x \leq b$</li><li>$b \leq y \leq c$</li><li>$c \leq z \leq d$</li></ul><p>使得以 $x,y,z$ 为三角形三边长度构成一个三角形。</p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>一开始的朴素思路是</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//https://codeforces.ml/contest/1337/problem/0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> _,a[<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;_);_;_--) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        <span class="keyword">if</span>(a[<span class="number">1</span>]+a[<span class="number">2</span>]&lt;=a[<span class="number">3</span>]) &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[<span class="number">3</span>]-a[<span class="number">2</span>]&lt;=a[<span class="number">2</span>]) <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>,a[<span class="number">3</span>]-a[<span class="number">2</span>]+<span class="number">1</span>,a[<span class="number">2</span>],a[<span class="number">3</span>]);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>,a[<span class="number">1</span>],a[<span class="number">3</span>]-a[<span class="number">1</span>]+<span class="number">1</span>,a[<span class="number">3</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>,a[<span class="number">1</span>],a[<span class="number">2</span>],a[<span class="number">3</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是 $x,y,z \le 5\times 10^8$ 。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//https://codeforces.ml/contest/1337/problem/0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> _,a[<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;_);_;_--) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>,a[<span class="number">2</span>],a[<span class="number">3</span>],a[<span class="number">3</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构造一组腰长大于边长的等腰三角形就好了。</p><h2 id="B-Kana-and-Dragon-Quest-game"><a href="#B-Kana-and-Dragon-Quest-game" class="headerlink" title="B. Kana and Dragon Quest game"></a><a href="https://codeforces.ml/contest/1337/problem/B" target="_blank" rel="noopener">B. Kana and Dragon Quest game</a></h2><h3 id="题意简述"><a href="#题意简述" class="headerlink" title="题意简述"></a>题意简述</h3><p>一个怪物有 $x$ 的血量，你可以执行最多 $n$ 次操作使得其血量等于 $\left\lfloor \frac{x}{2} \right\rfloor + 10$，也可以执行最多 $m$ 次操作使得其血量等于 $x-10$，问能否杀死它。</p><h3 id="解法-1"><a href="#解法-1" class="headerlink" title="解法"></a>解法</h3><p>想尽办法用第一种方法就行了，再判断剩下的血量能否被击杀</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//https://codeforces.ml/contest/1337/problem/B</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> _,n,m;</span><br><span class="line"><span class="keyword">double</span> x;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;_);_;_--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf%d%d"</span>,&amp;x,&amp;n,&amp;m);</span><br><span class="line">        <span class="keyword">int</span> ansn=<span class="number">0</span>,ansm=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(x&lt;=m*<span class="number">10</span>) &#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(ansn&lt;n) &#123;</span><br><span class="line">            x=<span class="built_in">floor</span>(x/<span class="number">2</span>)+<span class="number">10</span>;</span><br><span class="line">            ansn++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(x&lt;=m*<span class="number">10</span>) <span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-Linova-and-Kingdom"><a href="#C-Linova-and-Kingdom" class="headerlink" title="C. Linova and Kingdom"></a><a href="https://codeforces.ml/contest/1337/problem/C" target="_blank" rel="noopener">C. Linova and Kingdom</a></h2><h3 id="题意简述-1"><a href="#题意简述-1" class="headerlink" title="题意简述"></a>题意简述</h3><p>给定一棵 $n$ 个节点的树，选择 $k$ 个节点，使得从这些节点出发到根节点经过的非选中的点数量尽可能多，求出最大值。</p><h3 id="解法-2"><a href="#解法-2" class="headerlink" title="解法"></a>解法</h3><p>显而易见的选择 $k$ 个深度最深的点就行了。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">2</span>*<span class="number">100005</span>;</span><br><span class="line"><span class="keyword">int</span> idx,v[maxn*<span class="number">2</span>],first[maxn],nxt[maxn*<span class="number">2</span>],x,y,n,k;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    v[++idx]=y;</span><br><span class="line">    nxt[idx]=first[x];</span><br><span class="line">    first[x]=idx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> sz,dep;</span><br><span class="line">&#125; a[maxn];</span><br><span class="line">ll ans;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a1,node a2)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a1.dep-a1.sz&gt;a2.dep-a2.sz;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> fa)</span> </span>&#123;</span><br><span class="line">a[u].sz=<span class="number">1</span>,a[u].dep=a[fa].dep+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=first[u];i;i=nxt[i])</span><br><span class="line"><span class="keyword">if</span>(v[i]!=fa)</span><br><span class="line">            dfs(v[i],u),a[u].sz+=a[v[i]].sz;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;k);</span><br><span class="line">    a[<span class="number">0</span>].dep=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y),add(x,y),add(y,x);</span><br><span class="line">dfs(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++) ans+=a[i].dep-a[i].sz;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D-Xenia-and-Colorful-Gems"><a href="#D-Xenia-and-Colorful-Gems" class="headerlink" title="D. Xenia and Colorful Gems"></a><a href="https://codeforces.ml/contest/1337/problem/D" target="_blank" rel="noopener">D. Xenia and Colorful Gems</a></h2><p>题目太神仙了，先gugugu</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;中国场！莫名的激动。题目的风格真的和出题人有关，&lt;del&gt;虽然我只做了三题&lt;/del&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="比赛" scheme="http://answerend42.github.io/categories/%E6%AF%94%E8%B5%9B/"/>
    
    
      <category term="模拟" scheme="http://answerend42.github.io/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="构造" scheme="http://answerend42.github.io/tags/%E6%9E%84%E9%80%A0/"/>
    
      <category term="贪心" scheme="http://answerend42.github.io/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>Codeforces Round 633 (Div. 2)</title>
    <link href="http://answerend42.github.io/2020/04/24/cf1339/"/>
    <id>http://answerend42.github.io/2020/04/24/cf1339/</id>
    <published>2020-04-24T10:38:15.000Z</published>
    <updated>2020-10-28T05:40:54.871Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>可能是到目前为止最成功的一次 cf 了，下次要做到没人带我也这么强。</p></blockquote><a id="more"></a><h2 id="A-Filling-Diamonds"><a href="#A-Filling-Diamonds" class="headerlink" title="A. Filling Diamonds"></a><a href="https://codeforces.com/contest/1339/problem/A" target="_blank" rel="noopener">A. Filling Diamonds</a></h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定形如下图的形状，问用形如 $n=1$ 时的图形完全填充的方案数。</p><p><img src="https://www.superbed.cn/item/5ea265a9c2a9a83be51bb2bf.png" alt=""></p><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>模拟发现每种方案有且仅有一个竖着摆放的形状，答案即为 $n$ 。</p><p><img src="https://www.superbed.cn/item/5ea265aac2a9a83be51bb428.png" alt=""></p><p>代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> _,n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;_);_;_--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B-Sorted-Adjacent-Differences"><a href="#B-Sorted-Adjacent-Differences" class="headerlink" title="B. Sorted Adjacent Differences"></a><a href="https://codeforces.com/contest/1339/problem/B" target="_blank" rel="noopener">B. Sorted Adjacent Differences</a></h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定数组 $a$  要求重排使得 $|a<em>1 - a_2| \le |a_2 - a_3| \le \ldots \le |a</em>{n-1} - a_n|$。</p><h3 id="解法-1"><a href="#解法-1" class="headerlink" title="解法"></a>解法</h3><p>最大的和最小的放一起，产生的差当然是最大的，直接放到最后，接着是次大值和次小值。</p><p><img src="https://pic.downk.cc/item/5ea2b795c2a9a83be58337f6.gif" alt=""></p><p>推一下就知道每个元素最后的位置是什么了，可以按照官方题解所说的确定中间位置之后一左一右就可以了。</p><p>代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> _,n,a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;_);_;_--) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> m=(n+<span class="number">1</span>)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>,a[m]);</span><br><span class="line">            m+=i&amp;<span class="number">1</span>?i:-i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-Powered-Addition"><a href="#C-Powered-Addition" class="headerlink" title="C. Powered Addition"></a><a href="https://codeforces.com/contest/1339/problem/C" target="_blank" rel="noopener">C. Powered Addition</a></h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定数组 $a$，可以在第 $x$ 秒给 $a$ 中任意一段连续的数加上 $2^{x-1}$（或者不加），问至少多少秒后使得数组不递减。</p><h3 id="解法-2"><a href="#解法-2" class="headerlink" title="解法"></a>解法</h3><p>每次加 $a_i$ 的时候将连续的一段 $a_j \leq a_i (j&gt;i)$ 全部也加上，判断是否不递减</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">100005</span>;</span><br><span class="line">ll _,n,a[maxn],maxa,ans,j,k,sum;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;_);_;_--) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">        k=<span class="number">1</span>,sum=ans=<span class="number">0</span>,maxa=<span class="number">-0x3f3f3f3f</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">            <span class="keyword">while</span>(a[i]+sum&lt;maxa) &#123;<span class="comment">//加上 sum 还是不行，只能加更多</span></span><br><span class="line">                sum+=k,ans++;</span><br><span class="line">                <span class="keyword">if</span>(k&lt;=<span class="number">1e10</span><span class="number">-1</span>) k=k&lt;&lt;<span class="number">1</span>;<span class="comment">//k = 2^&#123;x-1&#125;</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            maxa=maxa&gt;a[i]?maxa:a[i];<span class="comment">//更新当前一段已知最大值，之后的必须大于等于 maxa</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D-Edge-Weight-Assignment"><a href="#D-Edge-Weight-Assignment" class="headerlink" title="D. Edge Weight Assignment"></a><a href="https://codeforces.com/contest/1339/problem/D" target="_blank" rel="noopener">D. Edge Weight Assignment</a></h2><p>太神仙了，先gugugu</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这次比较明显的感受就是想法全是对的，这是思维得到训练的结果，但是实现起来非常复杂，还搞错了好几次，其实就是练少了。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;可能是到目前为止最成功的一次 cf 了，下次要做到没人带我也这么强。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="比赛" scheme="http://answerend42.github.io/categories/%E6%AF%94%E8%B5%9B/"/>
    
    
      <category term="模拟" scheme="http://answerend42.github.io/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="构造" scheme="http://answerend42.github.io/tags/%E6%9E%84%E9%80%A0/"/>
    
  </entry>
  
  <entry>
    <title>区间DP的一些理解</title>
    <link href="http://answerend42.github.io/2020/04/17/%E5%8C%BA%E9%97%B4DP%E7%9A%84%E4%B8%80%E4%BA%9B%E7%90%86%E8%A7%A3/"/>
    <id>http://answerend42.github.io/2020/04/17/%E5%8C%BA%E9%97%B4DP%E7%9A%84%E4%B8%80%E4%BA%9B%E7%90%86%E8%A7%A3/</id>
    <published>2020-04-17T06:50:18.000Z</published>
    <updated>2020-10-28T05:43:05.777Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>区间$\text{DP}$比线性$\text{DP}$好想一些。</p></blockquote><a id="more"></a><h2 id="合并沙子"><a href="#合并沙子" class="headerlink" title="合并沙子"></a><a href="https://www.acoj.com/problems/12449" target="_blank" rel="noopener">合并沙子</a></h2><p>对于一道典型的区间$\text{DP}$问题，我们很容易思考到如何划分区间（集合）？</p><p>显然，最小的区间是每个数本身，此时合并花费一定最少（因为不需要花费）</p><p>考虑两个数作为一个区间，此时无论怎么合并花费一定最少（只有一种合并方法）</p><p>对于三个数及以上显然不存在直接合并一定最少的情况，例如 $1,3,100$ 如果先合并 $3,100$ 再合并 $1,103$ 总花费是 $207$ ，先合并 $1,3$ 再合并 $4,100$ 总花费则为 $108$。</p><p>那我们可以一直划分一个长度大于等于三的区间，那么显然前一部分的最小加上后一部分的最小使得总体最小，满足最优子结构</p><script type="math/tex; mode=display">f(i,j)=\min\{f(i,k)+f(k+1,r)+cost(i,j)\} \\      \ \ \ \ \ \ \ \ \ \ =\min\{f(i,k)+f(k+1,r)\}+cost(i,j)</script><p>其中 $f(i,j)$ 表示合并 $i\sim j$ 的最小花费 $cost(i,j)$ 为合并 $i,j$ 的最小代价</p><p><img src="https://pic.downk.cc/item/5e995fd1c2a9a83be56f8f3f.png" alt=""></p><p>想知道 $cost(i,j)$ 可以采用前缀和</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">//f[l][r]=min(f[l][r],f[l][k]+f[k+1][r]+sum(l,r)(l&lt;=k&lt;=r)</span></span><br><span class="line"><span class="keyword">int</span> n,a[<span class="number">305</span>],b[<span class="number">305</span>],f[<span class="number">305</span>][<span class="number">305</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        b[i]=b[i<span class="number">-1</span>]+a[i],f[i][i]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> len=<span class="number">1</span>;len&lt;n;len++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">1</span>;l+len&lt;=n;l++) &#123;</span><br><span class="line">            <span class="keyword">int</span> r=len+l;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;r;k++)</span><br><span class="line">                f[l][r]=min(f[l][r],f[l][k]+f[k+<span class="number">1</span>][r]+b[r]-b[l<span class="number">-1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,f[<span class="number">1</span>][n]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>枚举每一个长度 $\text{len}$ 的序列的最小合并花费，最终求出 $f(1,n)$ 即最终的最小花费。</p><h2 id="环形合并石子"><a href="#环形合并石子" class="headerlink" title="环形合并石子"></a><a href="https://www.acoj.com/problems/12690" target="_blank" rel="noopener">环形合并石子</a></h2><p>有了上一题的经验，很容易知道这一题的结论也是 $f(i,j) = \min \{ f(i,k) + f(k+1,r) \} + sum(i,j)$  </p><p>难点在于<strong>环形</strong>，我们可以用一个简单的办法解决，原序列展开最多 $n$ 的长度，我们只需要把整个序列复制一遍使其能够计算到 $2n$ 的位置就可以了</p><p><code>a[i+n]=a[i];</code> </p><p>对于最大值和最小值可以开两个数组 f, g 来解决，本质是一样的，但是要枚举每次长度为 $n$ 的序列的起始点才能找到最大值和最小值。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">//f[i][j]=min(f[l][r],f[i][k]+f[k+1][r])+sum(l,r)(l&lt;=k&lt;=r)</span></span><br><span class="line"><span class="keyword">int</span> n,a[<span class="number">605</span>],b[<span class="number">605</span>],f[<span class="number">605</span>][<span class="number">605</span>],g[<span class="number">605</span>][<span class="number">605</span>],res1=<span class="number">0x7fffff</span>,res2;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        a[i+n]=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*<span class="number">2</span>;i++) b[i]=b[i<span class="number">-1</span>]+a[i],f[i][i]=g[i][i]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> len=<span class="number">1</span>;len&lt;n;len++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">1</span>;l+len&lt;=n*<span class="number">2</span>;l++) &#123;</span><br><span class="line">            <span class="keyword">int</span> r=l+len;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=l;k&lt;r;k++)</span><br><span class="line">                f[l][r]=min(f[l][r],f[l][k]+f[k+<span class="number">1</span>][r]+b[r]-b[l<span class="number">-1</span>]);</span><br><span class="line">            g[l][r]=max(g[l][r],g[l][k]+g[k+<span class="number">1</span>][r]+b[r]-b[l<span class="number">-1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) res1=min(res1,f[i][i+n<span class="number">-1</span>]),res2=max(res2,g[i][i+n<span class="number">-1</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n%d"</span>,res1,res2);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="加分二叉树"><a href="#加分二叉树" class="headerlink" title="加分二叉树"></a><a href="https://www.acoj.com/problems/12454" target="_blank" rel="noopener">加分二叉树</a></h2><p>为什么树也是区间$\text{DP}$？</p><p>这里运用了中序遍历的性质（拍扁序）直接成为了一个区间</p><p>每次如果能够更新则根的序号改变。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">//f[i][j]=max(f[i][k-1]*f[k+1][j]+a[k])(l&lt;=k&lt;=r)</span></span><br><span class="line"><span class="comment">//k==l||k==r 特殊处理</span></span><br><span class="line"><span class="keyword">int</span> n,a[<span class="number">35</span>],f[<span class="number">35</span>][<span class="number">35</span>],g[<span class="number">35</span>][<span class="number">35</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&gt;r)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d "</span>,g[l][r]);</span><br><span class="line">    dfs(l,g[l][r]<span class="number">-1</span>);</span><br><span class="line">    dfs(g[l][r]+<span class="number">1</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        f[i][i]=a[i];</span><br><span class="line">        <span class="comment">//叶子节点就直接是自己</span></span><br><span class="line">        g[i][i]=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> len=<span class="number">1</span>;len&lt;n;len++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">1</span>;l+len&lt;=n;l++) &#123;</span><br><span class="line">            <span class="keyword">int</span> r=l+len;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=l;k&lt;=r;k++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(k==l) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(f[l][r]&lt;a[l]+f[k+<span class="number">1</span>][r])</span><br><span class="line">                        f[l][r]=a[l]+f[k+<span class="number">1</span>][r],g[l][r]=k;</span><br><span class="line">                    <span class="comment">//f[l][r]=max(f[l][r],a[l]+f[k+1][r]);</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(k==r) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(f[l][r]&lt;a[r]+f[l][k<span class="number">-1</span>])</span><br><span class="line">                        f[l][r]=a[r]+f[l][k<span class="number">-1</span>],g[l][r]=k;</span><br><span class="line">                    <span class="comment">//f[l][r]=max(f[l][r],a[r]+f[l][k-1]);</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span>(f[l][r]&lt;a[k]+f[l][k<span class="number">-1</span>]*f[k+<span class="number">1</span>][r])</span><br><span class="line">                        f[l][r]=a[k]+f[l][k<span class="number">-1</span>]*f[k+<span class="number">1</span>][r],g[l][r]=k;</span><br><span class="line">                    <span class="comment">//f[l][r]=max(f[l][r],a[k]+f[l][k-1]*f[k+1][r]);</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,f[<span class="number">1</span>][n]);</span><br><span class="line">    dfs(<span class="number">1</span>,n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>限于作者本人能力有限，期待各位多提些建议</p></blockquote><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;区间$\text{DP}$比线性$\text{DP}$好想一些。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://answerend42.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="动态规划" scheme="http://answerend42.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="区间DP" scheme="http://answerend42.github.io/tags/%E5%8C%BA%E9%97%B4DP/"/>
    
  </entry>
  
  <entry>
    <title>差分约束算法的一些个人理解</title>
    <link href="http://answerend42.github.io/2020/04/12/%E5%B7%AE%E5%88%86%E7%BA%A6%E6%9D%9F%E7%AE%97%E6%B3%95%E7%9A%84%E4%B8%80%E4%BA%9B%E4%B8%AA%E4%BA%BA%E7%90%86%E8%A7%A3/"/>
    <id>http://answerend42.github.io/2020/04/12/%E5%B7%AE%E5%88%86%E7%BA%A6%E6%9D%9F%E7%AE%97%E6%B3%95%E7%9A%84%E4%B8%80%E4%BA%9B%E4%B8%AA%E4%BA%BA%E7%90%86%E8%A7%A3/</id>
    <published>2020-04-11T17:26:41.000Z</published>
    <updated>2020-10-09T15:52:04.597Z</updated>
    
    <content type="html"><![CDATA[<p>update on 2020.4.26 新增<a href="https://www.luogu.com.cn/problem/P3275" target="_blank" rel="noopener">糖果</a>代码</p><h2 id="浅谈差分约束"><a href="#浅谈差分约束" class="headerlink" title="浅谈差分约束"></a>浅谈差分约束</h2><p><strong>差分约束系统</strong> 是一种特殊的 $n$ 元一次不等式组，它包含 $n$ 个变量 $x_1,x_2,\cdots x_n$ 以及 $m$ 个约束条件，每个约束条件是由两个其中的变量做差构成的，形如 $x_i-x_j \leq c_k$，其中 $c_k$ 是常数（可以是非负数，也可以是负数）。我们要解决的问题是：求一组解 ，使得所有的约束条件得到满足，否则判断出无解。</p><a id="more"></a><p>差分约束系统中的每个约束条件 $x_i-x_j\leq c_k$ 都可以变形成 $x_i \leq x_j+c_k$，这与单源最短路中的三角形不等式 $dist[y] \leq dist[x]+z$ 非常相似。因此，我们可以把每个变量 $x_i$ 看做图中的一个结点，对于每个约束条件 $x_i-x_j\leq c_k$，从结点 $j$ 向结点 $i$ 连一条长度为 $c_k$ 的有向边。</p><p>注意到，如果 ${a_1,a_2,\cdots ,a_n}$ 是该差分约束系统的一组解，那么对于任意的常数 $d$，${a_1+d,a_2+d,\cdots ,a_n}$ 显然也是该差分约束系统的一组解，因为这样做差后 $d$ 刚好被消掉。</p><p>设 $dist[0]=0$ 并向每一个点连一条边，跑单源最短路，若图中存在负环，则给定的差分约束系统无解，否则，$x_i=dist[i]$ 为该差分约束系统的一组解。</p><p>一般使用 Bellman-Ford 或队列优化的 Bellman-Ford（俗称 SPFA，在某些随机图跑得很快）判断图中是否存在负环，最坏时间复杂度为 $O(nm)$。</p><blockquote><p>个人理解：</p><ol><li><p>差分约束系统是一种特殊的 $n$ 元一次不等式组</p></li><li><p>约束条件形如 $x_i-x_j \leq c_k$</p></li><li><p>一些对照</p></li></ol><div class="table-container"><table><thead><tr><th style="text-align:center">差分约束中的条件</th><th style="text-align:center">三角形不等式中的条件</th></tr></thead><tbody><tr><td style="text-align:center">$x_i$​</td><td style="text-align:center">$dist[y]$</td></tr><tr><td style="text-align:center">$x_j$​</td><td style="text-align:center">$dist[x]$</td></tr><tr><td style="text-align:center">$c_k$​</td><td style="text-align:center">$z$​</td></tr></tbody></table></div><ol><li><p>$dist[0]$ 其实就是建立了超级源点</p></li><li><script type="math/tex; mode=display">\left\{\begin{aligned}x_1 \leq x_3+3 \\x_2 \leq x_1-5 \\x_3 \leq x_2-3\end{aligned}\right.</script><p>以此为例建图</p><p><img src="https://pic.downk.cc/item/5e91f3c8504f4bcb0407f4ae.png" alt=""></p><p>显然 1→2→3→1 形成了一个负环，显然是不可解的（此时无最短路）</p></li><li><p>为什么？我的理解是如果建出的图存在有负环，那么原差分约束系统中的约束条件必然相互矛盾，上例中是 $x_1 \leq x_1-5$</p></li><li><p>实际上这是一种抽象的概念，将某一类复杂的问题巧妙的结合在图论模型中再用最短路求解，实际上，图论问题，建图最难</p></li></ol></blockquote><p>SPFA虽然已经成为了被卡掉的算法（包括各个优化），其实用性仍然是很好的。</p><p>如果以 $x_1,x_2$ 表示两个变量，$x_1-x_2 \leq c$ 有如下条件是等价的</p><script type="math/tex; mode=display">x_1-x_2 \leq c \Leftrightarrow  x_1-x_2 \geq -c \Leftrightarrow x_1-x_2 < c+1 \Leftrightarrow x_1-x_2 > -c-1</script><p> 如果 $x_1-x_2=c$，有 $x_1-x_2 \geq c,x_1-x_2 \leq c$</p><p>（其实上面的做法是为了解决糖果这道题）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span>+<span class="number">5</span>,M = N*<span class="number">3</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">int</span> n,m,op,x,y,idx,v[M],w[M],dis[N],book[N],cnt[N],first[N],nxt[M];</span><br><span class="line">ll ans;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> z)</span> </span>&#123;</span><br><span class="line">    v[++idx]=y;</span><br><span class="line">    w[idx]=z;</span><br><span class="line">    nxt[idx]=first[x];</span><br><span class="line">    first[x]=idx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    book[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.push(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">memset</span>(dis,<span class="number">-0x3f</span>,<span class="keyword">sizeof</span>(dis));</span><br><span class="line">    dis[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        <span class="keyword">int</span> t=q.front();</span><br><span class="line">        q.pop();</span><br><span class="line">        book[t]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(cnt[t]++==n<span class="number">-1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=first[t];i;i=nxt[i]) &#123;</span><br><span class="line">            <span class="keyword">int</span> p=v[i];</span><br><span class="line">            <span class="keyword">if</span>(dis[p]&lt;dis[t]+w[i]) &#123;</span><br><span class="line">                dis[p]=dis[t]+w[i];</span><br><span class="line">                <span class="keyword">if</span>(!book[p]) &#123;</span><br><span class="line">                    book[p]=<span class="number">1</span>;</span><br><span class="line">                    q.push(p);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;op,&amp;x,&amp;y);</span><br><span class="line">        <span class="keyword">switch</span>(op) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                add(x,y,<span class="number">0</span>);add(y,x,<span class="number">0</span>);<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                add(x,y,<span class="number">1</span>);<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                add(y,x,<span class="number">0</span>);<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                add(y,x,<span class="number">1</span>);<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                add(x,y,<span class="number">0</span>);<span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(op%<span class="number">2</span>==<span class="number">0</span>&amp;&amp;x==y) <span class="keyword">return</span> <span class="built_in">printf</span>(<span class="string">"-1"</span>),<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--) add(<span class="number">0</span>,i,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(!spfa())</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">printf</span>(<span class="string">"-1"</span>),<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        ans+=dis[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;update on 2020.4.26 新增&lt;a href=&quot;https://www.luogu.com.cn/problem/P3275&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;糖果&lt;/a&gt;代码&lt;/p&gt;
&lt;h2 id=&quot;浅谈差分约束&quot;&gt;&lt;a href=&quot;#浅谈差分约束&quot; class=&quot;headerlink&quot; title=&quot;浅谈差分约束&quot;&gt;&lt;/a&gt;浅谈差分约束&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;差分约束系统&lt;/strong&gt; 是一种特殊的 $n$ 元一次不等式组，它包含 $n$ 个变量 $x_1,x_2,\cdots x_n$ 以及 $m$ 个约束条件，每个约束条件是由两个其中的变量做差构成的，形如 $x_i-x_j \leq c_k$，其中 $c_k$ 是常数（可以是非负数，也可以是负数）。我们要解决的问题是：求一组解 ，使得所有的约束条件得到满足，否则判断出无解。&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://answerend42.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="图论" scheme="http://answerend42.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="最短路" scheme="http://answerend42.github.io/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
      <category term="SPFA" scheme="http://answerend42.github.io/tags/SPFA/"/>
    
      <category term="差分约束" scheme="http://answerend42.github.io/tags/%E5%B7%AE%E5%88%86%E7%BA%A6%E6%9D%9F/"/>
    
  </entry>
  
</feed>
